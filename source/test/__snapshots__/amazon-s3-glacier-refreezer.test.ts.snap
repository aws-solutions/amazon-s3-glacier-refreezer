// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Stack Snapshot 1`] = `
Object {
  "Description": "(SO0140) - Amazon S3 Glacier Re:Freezer copies Amazon S3 Glacier Vault archives to Amazon S3 Bucket. Version %%VERSION%%",
  "Mappings": Object {
    "AnonymousStatisticsMap": Object {
      "SendAnonymousStatistics": Object {
        "Data": "Yes",
      },
    },
  },
  "Metadata": Object {
    "AWS::CloudFormation::Interface": Object {
      "ParameterGroups": Array [
        Object {
          "Label": Object {
            "default": "Required input parameters",
          },
          "Parameters": Array [
            "SourceVault",
            "DestinationBucket",
            "DestinationStorageClass",
            "GlacierRetrievalTier",
          ],
        },
        Object {
          "Label": Object {
            "default": "Confirmation to avoid excessive costs",
          },
          "Parameters": Array [
            "CloudTrailExportConfirmation",
            "SNSTopicForVaultConfirmation",
          ],
        },
        Object {
          "Label": Object {
            "default": "[OPTIONAL] External filenames override for ArchiveDescription",
          },
          "Parameters": Array [
            "FilelistS3Location",
          ],
        },
      ],
      "ParameterLabels": Object {
        "CloudTrailExportConfirmation": Object {
          "default": "Have you checked that there is only one Cloudtrail export to S3 bucket configured in your account?",
        },
        "DestinationBucket": Object {
          "default": "S3 destination bucket name",
        },
        "DestinationStorageClass": Object {
          "default": "S3 destination storage class",
        },
        "FilelistS3Location": Object {
          "default": "Amazon S3 location of the CSV file as BUCKET/FILEPATH",
        },
        "GlacierRetrievalTier": Object {
          "default": "Glacier retrieval tier",
        },
        "SNSTopicForVaultConfirmation": Object {
          "default": "Has default SNS notification topic on the vault been disabled or is it acceptable to receive notification for ALL archives in the vault?",
        },
        "SourceVault": Object {
          "default": "Source Glacier vault name",
        },
      },
    },
  },
  "Outputs": Object {
    "CloudTrailExportConfirmationSelection": Object {
      "Description": "Selected option for CloudTrail Export confirmation",
      "Value": Object {
        "Ref": "CloudTrailExportConfirmation",
      },
    },
    "SNSTopicForVaultConfirmationSelection": Object {
      "Description": "Selected option for SNS Topic for Vault confirmation",
      "Value": Object {
        "Ref": "SNSTopicForVaultConfirmation",
      },
    },
    "StagingAccessLogBucketName": Object {
      "Description": "Staging Access Logs Bucket Name",
      "Value": Object {
        "Ref": "AccessLogs",
      },
    },
    "StagingBucketName": Object {
      "Description": "Staging Bucket Name",
      "Value": Object {
        "Ref": "stagingBucket",
      },
    },
    "dashboardUrl": Object {
      "Description": "Progress Dashboard URL",
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "AWS::Region",
            },
            ".console.aws.amazon.com/cloudwatch/home?region=",
            Object {
              "Ref": "AWS::Region",
            },
            "#dashboards:name=",
            Object {
              "Ref": "AWS::StackName",
            },
            "-Amazon-S3-Glacier-ReFreezer;accountId=",
            Object {
              "Ref": "AWS::AccountId",
            },
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters02f12707d0bffa8954af14eb48309416638de8dd46f2ceaa0494cad1b6e3175cArtifactHashE0970D96": Object {
      "Description": "Artifact hash for asset \\"02f12707d0bffa8954af14eb48309416638de8dd46f2ceaa0494cad1b6e3175c\\"",
      "Type": "String",
    },
    "AssetParameters02f12707d0bffa8954af14eb48309416638de8dd46f2ceaa0494cad1b6e3175cS3Bucket3C842F04": Object {
      "Description": "S3 bucket for asset \\"02f12707d0bffa8954af14eb48309416638de8dd46f2ceaa0494cad1b6e3175c\\"",
      "Type": "String",
    },
    "AssetParameters02f12707d0bffa8954af14eb48309416638de8dd46f2ceaa0494cad1b6e3175cS3VersionKey671D5B94": Object {
      "Description": "S3 key for asset version \\"02f12707d0bffa8954af14eb48309416638de8dd46f2ceaa0494cad1b6e3175c\\"",
      "Type": "String",
    },
    "AssetParameters4992e7a127be7e52d20430a45e3d8b21285eeed4f46c2b372446c4746686136cArtifactHashE6E78177": Object {
      "Description": "Artifact hash for asset \\"4992e7a127be7e52d20430a45e3d8b21285eeed4f46c2b372446c4746686136c\\"",
      "Type": "String",
    },
    "AssetParameters4992e7a127be7e52d20430a45e3d8b21285eeed4f46c2b372446c4746686136cS3BucketC1F5C059": Object {
      "Description": "S3 bucket for asset \\"4992e7a127be7e52d20430a45e3d8b21285eeed4f46c2b372446c4746686136c\\"",
      "Type": "String",
    },
    "AssetParameters4992e7a127be7e52d20430a45e3d8b21285eeed4f46c2b372446c4746686136cS3VersionKey14678C00": Object {
      "Description": "S3 key for asset version \\"4992e7a127be7e52d20430a45e3d8b21285eeed4f46c2b372446c4746686136c\\"",
      "Type": "String",
    },
    "AssetParameters64575d4a11d974ec52b55af18bc6083309c4556861988baf35ecad9aab5aadfeArtifactHash07E73E28": Object {
      "Description": "Artifact hash for asset \\"64575d4a11d974ec52b55af18bc6083309c4556861988baf35ecad9aab5aadfe\\"",
      "Type": "String",
    },
    "AssetParameters64575d4a11d974ec52b55af18bc6083309c4556861988baf35ecad9aab5aadfeS3Bucket42A6D7A1": Object {
      "Description": "S3 bucket for asset \\"64575d4a11d974ec52b55af18bc6083309c4556861988baf35ecad9aab5aadfe\\"",
      "Type": "String",
    },
    "AssetParameters64575d4a11d974ec52b55af18bc6083309c4556861988baf35ecad9aab5aadfeS3VersionKeyDF57DFE2": Object {
      "Description": "S3 key for asset version \\"64575d4a11d974ec52b55af18bc6083309c4556861988baf35ecad9aab5aadfe\\"",
      "Type": "String",
    },
    "AssetParameters6cfd7607a87ee5914eeeafada9959b33754b7512ea44c83f7a98630c41718867ArtifactHash4D978E23": Object {
      "Description": "Artifact hash for asset \\"6cfd7607a87ee5914eeeafada9959b33754b7512ea44c83f7a98630c41718867\\"",
      "Type": "String",
    },
    "AssetParameters6cfd7607a87ee5914eeeafada9959b33754b7512ea44c83f7a98630c41718867S3BucketFD95145E": Object {
      "Description": "S3 bucket for asset \\"6cfd7607a87ee5914eeeafada9959b33754b7512ea44c83f7a98630c41718867\\"",
      "Type": "String",
    },
    "AssetParameters6cfd7607a87ee5914eeeafada9959b33754b7512ea44c83f7a98630c41718867S3VersionKeyB949D4AD": Object {
      "Description": "S3 key for asset version \\"6cfd7607a87ee5914eeeafada9959b33754b7512ea44c83f7a98630c41718867\\"",
      "Type": "String",
    },
    "AssetParameters6f44b6e9e590716ba5da1b6a6eda781bcb02dfe5e749cb4659bd389610f43658ArtifactHash1888A088": Object {
      "Description": "Artifact hash for asset \\"6f44b6e9e590716ba5da1b6a6eda781bcb02dfe5e749cb4659bd389610f43658\\"",
      "Type": "String",
    },
    "AssetParameters6f44b6e9e590716ba5da1b6a6eda781bcb02dfe5e749cb4659bd389610f43658S3Bucket53A85F49": Object {
      "Description": "S3 bucket for asset \\"6f44b6e9e590716ba5da1b6a6eda781bcb02dfe5e749cb4659bd389610f43658\\"",
      "Type": "String",
    },
    "AssetParameters6f44b6e9e590716ba5da1b6a6eda781bcb02dfe5e749cb4659bd389610f43658S3VersionKeyB9F30624": Object {
      "Description": "S3 key for asset version \\"6f44b6e9e590716ba5da1b6a6eda781bcb02dfe5e749cb4659bd389610f43658\\"",
      "Type": "String",
    },
    "AssetParameters86f042fb2a2b3ab5a4694522fc2ecad8dfd1c22c78853adf9e62002400d3d4b4ArtifactHash40A883AA": Object {
      "Description": "Artifact hash for asset \\"86f042fb2a2b3ab5a4694522fc2ecad8dfd1c22c78853adf9e62002400d3d4b4\\"",
      "Type": "String",
    },
    "AssetParameters86f042fb2a2b3ab5a4694522fc2ecad8dfd1c22c78853adf9e62002400d3d4b4S3Bucket1ADF9B83": Object {
      "Description": "S3 bucket for asset \\"86f042fb2a2b3ab5a4694522fc2ecad8dfd1c22c78853adf9e62002400d3d4b4\\"",
      "Type": "String",
    },
    "AssetParameters86f042fb2a2b3ab5a4694522fc2ecad8dfd1c22c78853adf9e62002400d3d4b4S3VersionKey80444FFA": Object {
      "Description": "S3 key for asset version \\"86f042fb2a2b3ab5a4694522fc2ecad8dfd1c22c78853adf9e62002400d3d4b4\\"",
      "Type": "String",
    },
    "AssetParametersbbf61143dbfbe69ac56b90a0201339520aee10bb5286954f9545e5b5d9c98f30ArtifactHash7EE9A01C": Object {
      "Description": "Artifact hash for asset \\"bbf61143dbfbe69ac56b90a0201339520aee10bb5286954f9545e5b5d9c98f30\\"",
      "Type": "String",
    },
    "AssetParametersbbf61143dbfbe69ac56b90a0201339520aee10bb5286954f9545e5b5d9c98f30S3Bucket7AB0C263": Object {
      "Description": "S3 bucket for asset \\"bbf61143dbfbe69ac56b90a0201339520aee10bb5286954f9545e5b5d9c98f30\\"",
      "Type": "String",
    },
    "AssetParametersbbf61143dbfbe69ac56b90a0201339520aee10bb5286954f9545e5b5d9c98f30S3VersionKey5BC4A3EC": Object {
      "Description": "S3 key for asset version \\"bbf61143dbfbe69ac56b90a0201339520aee10bb5286954f9545e5b5d9c98f30\\"",
      "Type": "String",
    },
    "AssetParametersc538b688944692690bafacf97f926331fd81f48d27691167f9daa7c84e163831ArtifactHashEDA3C0EF": Object {
      "Description": "Artifact hash for asset \\"c538b688944692690bafacf97f926331fd81f48d27691167f9daa7c84e163831\\"",
      "Type": "String",
    },
    "AssetParametersc538b688944692690bafacf97f926331fd81f48d27691167f9daa7c84e163831S3Bucket3D65B448": Object {
      "Description": "S3 bucket for asset \\"c538b688944692690bafacf97f926331fd81f48d27691167f9daa7c84e163831\\"",
      "Type": "String",
    },
    "AssetParametersc538b688944692690bafacf97f926331fd81f48d27691167f9daa7c84e163831S3VersionKeyB75931C8": Object {
      "Description": "S3 key for asset version \\"c538b688944692690bafacf97f926331fd81f48d27691167f9daa7c84e163831\\"",
      "Type": "String",
    },
    "AssetParameterscac40dd75e680d661e66e3bf5a0bba8a142f38b2bc3178ea3c93494ef8786f68ArtifactHashA37BE8AB": Object {
      "Description": "Artifact hash for asset \\"cac40dd75e680d661e66e3bf5a0bba8a142f38b2bc3178ea3c93494ef8786f68\\"",
      "Type": "String",
    },
    "AssetParameterscac40dd75e680d661e66e3bf5a0bba8a142f38b2bc3178ea3c93494ef8786f68S3Bucket77A37061": Object {
      "Description": "S3 bucket for asset \\"cac40dd75e680d661e66e3bf5a0bba8a142f38b2bc3178ea3c93494ef8786f68\\"",
      "Type": "String",
    },
    "AssetParameterscac40dd75e680d661e66e3bf5a0bba8a142f38b2bc3178ea3c93494ef8786f68S3VersionKeyD4C9C0A0": Object {
      "Description": "S3 key for asset version \\"cac40dd75e680d661e66e3bf5a0bba8a142f38b2bc3178ea3c93494ef8786f68\\"",
      "Type": "String",
    },
    "AssetParametersdf4e3db5885ffe5c62d78b25fbb2dc530f67091b9eff658212e4b60f853e3d0fArtifactHash4F16674F": Object {
      "Description": "Artifact hash for asset \\"df4e3db5885ffe5c62d78b25fbb2dc530f67091b9eff658212e4b60f853e3d0f\\"",
      "Type": "String",
    },
    "AssetParametersdf4e3db5885ffe5c62d78b25fbb2dc530f67091b9eff658212e4b60f853e3d0fS3Bucket41EC0D75": Object {
      "Description": "S3 bucket for asset \\"df4e3db5885ffe5c62d78b25fbb2dc530f67091b9eff658212e4b60f853e3d0f\\"",
      "Type": "String",
    },
    "AssetParametersdf4e3db5885ffe5c62d78b25fbb2dc530f67091b9eff658212e4b60f853e3d0fS3VersionKey5B00C857": Object {
      "Description": "S3 key for asset version \\"df4e3db5885ffe5c62d78b25fbb2dc530f67091b9eff658212e4b60f853e3d0f\\"",
      "Type": "String",
    },
    "AssetParameterse63aeebc152892bb5b362662f7fb61da6c0cd6cb9151f53891d7c717710aab8aArtifactHash7135A57E": Object {
      "Description": "Artifact hash for asset \\"e63aeebc152892bb5b362662f7fb61da6c0cd6cb9151f53891d7c717710aab8a\\"",
      "Type": "String",
    },
    "AssetParameterse63aeebc152892bb5b362662f7fb61da6c0cd6cb9151f53891d7c717710aab8aS3Bucket4421C61A": Object {
      "Description": "S3 bucket for asset \\"e63aeebc152892bb5b362662f7fb61da6c0cd6cb9151f53891d7c717710aab8a\\"",
      "Type": "String",
    },
    "AssetParameterse63aeebc152892bb5b362662f7fb61da6c0cd6cb9151f53891d7c717710aab8aS3VersionKeyBB570786": Object {
      "Description": "S3 key for asset version \\"e63aeebc152892bb5b362662f7fb61da6c0cd6cb9151f53891d7c717710aab8a\\"",
      "Type": "String",
    },
    "AssetParametersf9bb0c009ec5f621cba3fcfea4f56330abcb2a532d3f2622e1253d0a03653299ArtifactHash90B94C1F": Object {
      "Description": "Artifact hash for asset \\"f9bb0c009ec5f621cba3fcfea4f56330abcb2a532d3f2622e1253d0a03653299\\"",
      "Type": "String",
    },
    "AssetParametersf9bb0c009ec5f621cba3fcfea4f56330abcb2a532d3f2622e1253d0a03653299S3Bucket98EC60A2": Object {
      "Description": "S3 bucket for asset \\"f9bb0c009ec5f621cba3fcfea4f56330abcb2a532d3f2622e1253d0a03653299\\"",
      "Type": "String",
    },
    "AssetParametersf9bb0c009ec5f621cba3fcfea4f56330abcb2a532d3f2622e1253d0a03653299S3VersionKeyA219EACB": Object {
      "Description": "S3 key for asset version \\"f9bb0c009ec5f621cba3fcfea4f56330abcb2a532d3f2622e1253d0a03653299\\"",
      "Type": "String",
    },
    "CloudTrailExportConfirmation": Object {
      "AllowedValues": Array [
        "Yes",
        "No",
      ],
      "Type": "String",
    },
    "DestinationBucket": Object {
      "AllowedPattern": ".+",
      "Type": "String",
    },
    "DestinationStorageClass": Object {
      "AllowedValues": Array [
        "STANDARD",
        "INTELLIGENT_TIERING",
        "STANDARD_IA",
        "ONEZONE_IA",
        "GLACIER",
        "DEEP_ARCHIVE",
      ],
      "Default": "STANDARD",
      "Type": "String",
    },
    "FilelistS3Location": Object {
      "Default": "",
      "Type": "String",
    },
    "GlacierRetrievalTier": Object {
      "AllowedValues": Array [
        "Bulk",
        "Standard",
        "Expedited",
      ],
      "Default": "Bulk",
      "Type": "String",
    },
    "SNSTopicForVaultConfirmation": Object {
      "AllowedValues": Array [
        "Yes",
        "No",
      ],
      "Type": "String",
    },
    "SourceVault": Object {
      "AllowedPattern": ".+",
      "Type": "String",
    },
  },
  "Resources": Object {
    "AccessLogs": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W51",
              "reason": "This bucket does not need a bucket policy",
            },
            Object {
              "id": "W35",
              "reason": "This bucket is used to store access logs for another bucket",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "dynamoDataCatalogmetricsTableD896DDA5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "pk",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": Array [
          Object {
            "AttributeName": "pk",
            "KeyType": "HASH",
          },
        ],
        "TableName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-grf-job-metrics",
            ],
          ],
        },
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "dynamoDataCatalogstatusTableA9EC97D3": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "aid",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "pid",
            "AttributeType": "N",
          },
          Object {
            "AttributeName": "ifn",
            "AttributeType": "N",
          },
          Object {
            "AttributeName": "fname",
            "AttributeType": "S",
          },
        ],
        "GlobalSecondaryIndexes": Array [
          Object {
            "IndexName": "max-file-index",
            "KeySchema": Array [
              Object {
                "AttributeName": "pid",
                "KeyType": "HASH",
              },
              Object {
                "AttributeName": "ifn",
                "KeyType": "RANGE",
              },
            ],
            "Projection": Object {
              "ProjectionType": "KEYS_ONLY",
            },
            "ProvisionedThroughput": Object {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 30,
            },
          },
          Object {
            "IndexName": "name-index",
            "KeySchema": Array [
              Object {
                "AttributeName": "fname",
                "KeyType": "HASH",
              },
            ],
            "Projection": Object {
              "ProjectionType": "KEYS_ONLY",
            },
            "ProvisionedThroughput": Object {
              "ReadCapacityUnits": 15,
              "WriteCapacityUnits": 30,
            },
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "aid",
            "KeyType": "HASH",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 25,
          "WriteCapacityUnits": 30,
        },
        "StreamSpecification": Object {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TableName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-grf-job-status",
            ],
          ],
        },
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "dynamoDataCatalogstatusTableReadScalingTarget816FEC1D": Object {
      "Properties": Object {
        "MaxCapacity": 500,
        "MinCapacity": 25,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "table/",
              Object {
                "Ref": "dynamoDataCatalogstatusTableA9EC97D3",
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            ],
          ],
        },
        "ScalableDimension": "dynamodb:table:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "dynamoDataCatalogstatusTableReadScalingTargetTracking24DC4A7C": Object {
      "Properties": Object {
        "PolicyName": "teststackdynamoDataCatalogstatusTableReadScalingTargetTracking378FFBF4",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "dynamoDataCatalogstatusTableReadScalingTarget816FEC1D",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 10,
          "TargetValue": 70,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "dynamoDataCatalogstatusTableWriteScalingTarget2F154BD2": Object {
      "Properties": Object {
        "MaxCapacity": 500,
        "MinCapacity": 30,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "table/",
              Object {
                "Ref": "dynamoDataCatalogstatusTableA9EC97D3",
              },
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            ],
          ],
        },
        "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "dynamoDataCatalogstatusTableWriteScalingTargetTracking9C8BFD84": Object {
      "Properties": Object {
        "PolicyName": "teststackdynamoDataCatalogstatusTableWriteScalingTargetTracking6CD34C15",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "dynamoDataCatalogstatusTableWriteScalingTarget2F154BD2",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 10,
          "TargetValue": 70,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "dynamoDataCatalogstatusTablemaxfileindexReadScalingTargetF2F56B9B": Object {
      "Properties": Object {
        "MaxCapacity": 500,
        "MinCapacity": 5,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "table/",
              Object {
                "Ref": "dynamoDataCatalogstatusTableA9EC97D3",
              },
              "/index/max-file-index",
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            ],
          ],
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "dynamoDataCatalogstatusTablemaxfileindexReadScalingTargetTracking219D84D8": Object {
      "Properties": Object {
        "PolicyName": "teststackdynamoDataCatalogstatusTablemaxfileindexReadScalingTargetTracking1D8D5641",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "dynamoDataCatalogstatusTablemaxfileindexReadScalingTargetF2F56B9B",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 10,
          "TargetValue": 70,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "dynamoDataCatalogstatusTablemaxfileindexWriteScalingTargetD5A04ED2": Object {
      "Properties": Object {
        "MaxCapacity": 500,
        "MinCapacity": 30,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "table/",
              Object {
                "Ref": "dynamoDataCatalogstatusTableA9EC97D3",
              },
              "/index/max-file-index",
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            ],
          ],
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "dynamoDataCatalogstatusTablemaxfileindexWriteScalingTargetTracking33C1B067": Object {
      "Properties": Object {
        "PolicyName": "teststackdynamoDataCatalogstatusTablemaxfileindexWriteScalingTargetTracking33B02C5F",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "dynamoDataCatalogstatusTablemaxfileindexWriteScalingTargetD5A04ED2",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 10,
          "TargetValue": 70,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "dynamoDataCatalogstatusTablenameindexReadScalingTarget5EF3B4C2": Object {
      "Properties": Object {
        "MaxCapacity": 500,
        "MinCapacity": 15,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "table/",
              Object {
                "Ref": "dynamoDataCatalogstatusTableA9EC97D3",
              },
              "/index/name-index",
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            ],
          ],
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "dynamoDataCatalogstatusTablenameindexReadScalingTargetTrackingA09A1826": Object {
      "Properties": Object {
        "PolicyName": "teststackdynamoDataCatalogstatusTablenameindexReadScalingTargetTrackingFADC652E",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "dynamoDataCatalogstatusTablenameindexReadScalingTarget5EF3B4C2",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 10,
          "TargetValue": 70,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "dynamoDataCatalogstatusTablenameindexWriteScalingTargetA15E58A8": Object {
      "Properties": Object {
        "MaxCapacity": 500,
        "MinCapacity": 30,
        "ResourceId": Object {
          "Fn::Join": Array [
            "",
            Array [
              "table/",
              Object {
                "Ref": "dynamoDataCatalogstatusTableA9EC97D3",
              },
              "/index/name-index",
            ],
          ],
        },
        "RoleARN": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            ],
          ],
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "dynamoDataCatalogstatusTablenameindexWriteScalingTargetTrackingEFA06F13": Object {
      "Properties": Object {
        "PolicyName": "teststackdynamoDataCatalogstatusTablenameindexWriteScalingTargetTrackingB10B5367",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": Object {
          "Ref": "dynamoDataCatalogstatusTablenameindexWriteScalingTargetA15E58A8",
        },
        "TargetTrackingScalingPolicyConfiguration": Object {
          "PredefinedMetricSpecification": Object {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 10,
          "TargetValue": 70,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "glueDataCatalogAthenaWorkgroup81F608D4": Object {
      "Properties": Object {
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-glacier-refreezer-sol",
            ],
          ],
        },
        "RecursiveDeleteOption": true,
        "State": "ENABLED",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "WorkGroupConfiguration": Object {
          "ResultConfiguration": Object {
            "OutputLocation": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "stagingBucket",
                  },
                  "/results",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "glueDataCatalogFilelistTable2224351B": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
        },
        "TableInput": Object {
          "Description": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::GetAtt": Array [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
                "-grf-filelist generated by CDK",
              ],
            ],
          },
          "Name": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::GetAtt": Array [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
                "-grf-filelist",
              ],
            ],
          },
          "Parameters": Object {
            "has_encrypted_data": false,
          },
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "archiveid",
                "Type": "string",
              },
              Object {
                "Name": "override",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "stagingBucket",
                  },
                  "/filelist/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.serde2.OpenCSVSerde",
            },
            "StoredAsSubDirectories": false,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "glueDataCatalogInventoryDatabase96DE1AD3": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": Object {
          "Name": Object {
            "Fn::Join": Array [
              "",
              Array [
                "refreezer-inventory-",
                Object {
                  "Fn::GetAtt": Array [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
              ],
            ],
          },
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "glueDataCatalogInventoryTable05E5F37F": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
        },
        "TableInput": Object {
          "Description": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::GetAtt": Array [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
                "-grf-inventory generated by CDK",
              ],
            ],
          },
          "Name": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::GetAtt": Array [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
                "-grf-inventory",
              ],
            ],
          },
          "Parameters": Object {
            "has_encrypted_data": false,
            "skip.header.line.count": "1",
          },
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "archiveid",
                "Type": "string",
              },
              Object {
                "Name": "archivedescription",
                "Type": "string",
              },
              Object {
                "Name": "creationdate",
                "Type": "string",
              },
              Object {
                "Name": "size",
                "Type": "bigint",
              },
              Object {
                "Name": "sha256treehash",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "stagingBucket",
                  },
                  "/inventory/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "SerdeInfo": Object {
              "Parameters": Object {
                "escapeChar": "\\\\",
                "quoteChar": "\\"",
              },
              "SerializationLibrary": "org.apache.hadoop.hive.serde2.OpenCSVSerde",
            },
            "StoredAsSubDirectories": false,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "glueDataCatalogPartitionedinventoryTable94032B41": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
        },
        "TableInput": Object {
          "Description": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::GetAtt": Array [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
                "-grf-inventory-partitioned generated by CDK",
              ],
            ],
          },
          "Name": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::GetAtt": Array [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
                "-grf-inventory-partitioned",
              ],
            ],
          },
          "Parameters": Object {
            "has_encrypted_data": false,
            "parquet.compression": "SNAPPY",
          },
          "PartitionKeys": Array [
            Object {
              "Name": "part",
              "Type": "bigint",
            },
          ],
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "archiveid",
                "Type": "string",
              },
              Object {
                "Name": "archivedescription",
                "Type": "string",
              },
              Object {
                "Name": "creationdate",
                "Type": "string",
              },
              Object {
                "Name": "size",
                "Type": "bigint",
              },
              Object {
                "Name": "sha256treehash",
                "Type": "string",
              },
              Object {
                "Name": "row_num",
                "Type": "bigint",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "stagingBucket",
                  },
                  "/partitioned/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": Object {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": false,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "glueDataCatalogtoLowercase8AA0AFF5": Object {
      "DependsOn": Array [
        "glueDataCatalogtoLowercaseRole5DC9B33B",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "/*********************************************************************************************************************
 *  Copyright 2019-2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.                                      *
 *                                                                                                                    *
 *  Licensed under the Apache License, Version 2.0 (the \\"License\\"). You may not use this file except in compliance    *
 *  with the License. A copy of the License is located at                                                             *
 *                                                                                                                    *
 *      http://www.apache.org/licenses/                                                                               *
 *                                                                                                                    *
 *  or in the 'license' file accompanying this file. This file is distributed on an 'AS IS' BASIS, WITHOUT WARRANTIES *
 *  OR CONDITIONS OF ANY KIND, express or implied. See the License for the specific language governing permissions    *
 *  and limitations under the License.                                                                                *
 *********************************************************************************************************************/

/**
 * @author Solution Builders
 */

'use strict';

const response = require('cfn-response');
exports.handler = function(event, context) {
    console.log(JSON.stringify(event))
    let responseData = {}
    for(const [key, val] of Object.entries(event.ResourceProperties)) {
        responseData[key] = val.toLowerCase();
      }
    console.log(responseData)    
    response.send(event, context, response.SUCCESS, responseData);
};
",
        },
        "FunctionName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-toLowercase",
            ],
          ],
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "glueDataCatalogtoLowercaseRole5DC9B33B",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "glueDataCatalogtoLowercaseLogGroupC1705CD6": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-toLowercase",
            ],
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "glueDataCatalogtoLowercaseRole5DC9B33B": Object {
      "DependsOn": Array [
        "glueDataCatalogtoLowercaseLogGroupC1705CD6",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "glueDataCatalogtoLowercaseTrigger0ABB3AB5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "glueDataCatalogtoLowercase8AA0AFF5",
            "Arn",
          ],
        },
        "stack_name": Object {
          "Ref": "AWS::StackName",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "monitoringcalculateMetrics2AD3D7FA": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersc538b688944692690bafacf97f926331fd81f48d27691167f9daa7c84e163831S3Bucket3D65B448",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc538b688944692690bafacf97f926331fd81f48d27691167f9daa7c84e163831S3VersionKeyB75931C8",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersc538b688944692690bafacf97f926331fd81f48d27691167f9daa7c84e163831S3VersionKeyB75931C8",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "METRICS_TABLE": Object {
              "Ref": "dynamoDataCatalogmetricsTableD896DDA5",
            },
          },
        },
        "FunctionName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-calculateMetrics",
            ],
          ],
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "monitoringcalculateMetricsServiceRole67BC8BC3",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631": Object {
      "Properties": Object {
        "BatchSize": 1000,
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "dynamoDataCatalogstatusTableA9EC97D3",
            "StreamArn",
          ],
        },
        "FunctionName": Object {
          "Ref": "monitoringcalculateMetrics2AD3D7FA",
        },
        "MaximumBatchingWindowInSeconds": 30,
        "ParallelizationFactor": 1,
        "StartingPosition": "TRIM_HORIZON",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "monitoringcalculateMetricsLogGroup9961A214": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-calculateMetrics",
            ],
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringcalculateMetricsServiceRole67BC8BC3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "dynamoDataCatalogmetricsTableD896DDA5",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "dynamoDataCatalogstatusTableA9EC97D3",
                  "StreamArn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "Roles": Array [
          Object {
            "Ref": "monitoringcalculateMetricsServiceRole67BC8BC3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "monitoringcopyArchiveLogGroupBB702B1B": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-copyArchive",
            ],
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringcopyChunkLogGroup5D04918E": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-copyChunk",
            ],
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringdeployGlueJobScriptLogGroupAA50E4DE": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-deployGlueJobScript",
            ],
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringdownloadInventoryLogGroup2471C2FF": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-downloadInventory",
            ],
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringdownloadInventoryPartLogGroupD9E69690": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-downloadInventoryPart",
            ],
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringglacierrefreezerdashboardE7F6D8AE": Object {
      "Properties": Object {
        "DashboardBody": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"widgets\\":[{\\"type\\":\\"metric\\",\\"width\\":20,\\"height\\":3,\\"x\\":0,\\"y\\":0,\\"properties\\":{\\"view\\":\\"singleValue\\",\\"title\\":\\"Amazon S3 Glacier Re:Freezer Progress Metrics : ",
              Object {
                "Ref": "AWS::StackName",
              },
              "\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AmazonS3GlacierReFreezer\\",\\"Total Archives\\",\\"CloudFormation Stack\\",\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "\\",{\\"accountId\\":\\"",
              Object {
                "Ref": "AWS::AccountId",
              },
              "\\",\\"stat\\":\\"Maximum\\"}],[\\"AmazonS3GlacierReFreezer\\",\\"Requested from Glacier\\",\\"CloudFormation Stack\\",\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "\\",{\\"accountId\\":\\"",
              Object {
                "Ref": "AWS::AccountId",
              },
              "\\",\\"stat\\":\\"Maximum\\"}],[\\"AmazonS3GlacierReFreezer\\",\\"Copy Initiated\\",\\"CloudFormation Stack\\",\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "\\",{\\"accountId\\":\\"",
              Object {
                "Ref": "AWS::AccountId",
              },
              "\\",\\"stat\\":\\"Maximum\\"}],[\\"AmazonS3GlacierReFreezer\\",\\"Copy Completed\\",\\"CloudFormation Stack\\",\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "\\",{\\"accountId\\":\\"",
              Object {
                "Ref": "AWS::AccountId",
              },
              "\\",\\"stat\\":\\"Maximum\\"}],[\\"AmazonS3GlacierReFreezer\\",\\"Hashes Validated\\",\\"CloudFormation Stack\\",\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "\\",{\\"accountId\\":\\"",
              Object {
                "Ref": "AWS::AccountId",
              },
              "\\",\\"stat\\":\\"Maximum\\"}]]}},{\\"type\\":\\"metric\\",\\"width\\":20,\\"height\\":6,\\"x\\":0,\\"y\\":3,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Timeline\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AmazonS3GlacierReFreezer\\",\\"Total Archives\\",\\"CloudFormation Stack\\",\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "\\",{\\"accountId\\":\\"",
              Object {
                "Ref": "AWS::AccountId",
              },
              "\\",\\"stat\\":\\"Maximum\\"}],[\\"AmazonS3GlacierReFreezer\\",\\"Requested from Glacier\\",\\"CloudFormation Stack\\",\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "\\",{\\"accountId\\":\\"",
              Object {
                "Ref": "AWS::AccountId",
              },
              "\\",\\"stat\\":\\"Maximum\\"}],[\\"AmazonS3GlacierReFreezer\\",\\"Copy Initiated\\",\\"CloudFormation Stack\\",\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "\\",{\\"accountId\\":\\"",
              Object {
                "Ref": "AWS::AccountId",
              },
              "\\",\\"stat\\":\\"Maximum\\"}],[\\"AmazonS3GlacierReFreezer\\",\\"Copy Completed\\",\\"CloudFormation Stack\\",\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "\\",{\\"accountId\\":\\"",
              Object {
                "Ref": "AWS::AccountId",
              },
              "\\",\\"stat\\":\\"Maximum\\"}],[\\"AmazonS3GlacierReFreezer\\",\\"Hashes Validated\\",\\"CloudFormation Stack\\",\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "\\",{\\"accountId\\":\\"",
              Object {
                "Ref": "AWS::AccountId",
              },
              "\\",\\"stat\\":\\"Maximum\\"}]],\\"yAxis\\":{}}},{\\"type\\":\\"log\\",\\"width\\":20,\\"height\\":6,\\"x\\":0,\\"y\\":9,\\"properties\\":{\\"view\\":\\"table\\",\\"title\\":\\"Errors\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"query\\":\\"SOURCE '/aws/states/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-stageTwoOrchestrator' | SOURCE '/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-calculateMetrics' | SOURCE '/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-copyArchive' | SOURCE '/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-copyChunk' | SOURCE '/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-deployGlueJobScript' | SOURCE '/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-downloadInventory' | SOURCE '/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-downloadInventoryPart' | SOURCE '/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-postMetrics' | SOURCE '/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-requestArchives' | SOURCE '/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-requestInventory' | SOURCE '/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-sendAnonymousStats' | fields @timestamp, @message \\\\n| filter @message like /error/ or @message like /Error/ or @message like /ERROR/\\\\n| sort by @timestamp desc\\"}},{\\"type\\":\\"metric\\",\\"width\\":20,\\"height\\":6,\\"x\\":0,\\"y\\":15,\\"properties\\":{\\"view\\":\\"timeSeries\\",\\"title\\":\\"Oldest SQS Message\\",\\"region\\":\\"",
              Object {
                "Ref": "AWS::Region",
              },
              "\\",\\"metrics\\":[[\\"AWS/SQS\\",\\"ApproximateAgeOfOldestMessage\\",\\"QueueName\\",\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "-archiveQueue\\"],[\\"AWS/SQS\\",\\"ApproximateAgeOfOldestMessage\\",\\"QueueName\\",\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "-chunkQueue\\"]],\\"yAxis\\":{}}}]}",
            ],
          ],
        },
        "DashboardName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-Amazon-S3-Glacier-ReFreezer",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "monitoringpostMetricSchedule6EF27DB5": Object {
      "Properties": Object {
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "monitoringpostMetrics42F37764",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "monitoringpostMetrics42F37764",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "monitoringpostMetricSchedule6EF27DB5",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "monitoringpostMetrics42F37764": Object {
      "DependsOn": Array [
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters86f042fb2a2b3ab5a4694522fc2ecad8dfd1c22c78853adf9e62002400d3d4b4S3Bucket1ADF9B83",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters86f042fb2a2b3ab5a4694522fc2ecad8dfd1c22c78853adf9e62002400d3d4b4S3VersionKey80444FFA",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters86f042fb2a2b3ab5a4694522fc2ecad8dfd1c22c78853adf9e62002400d3d4b4S3VersionKey80444FFA",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "METRICS_TABLE": Object {
              "Ref": "dynamoDataCatalogmetricsTableD896DDA5",
            },
            "STACK_NAME": Object {
              "Ref": "AWS::StackName",
            },
            "STATUS_TABLE": Object {
              "Ref": "dynamoDataCatalogstatusTableA9EC97D3",
            },
          },
        },
        "FunctionName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-postMetrics",
            ],
          ],
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "monitoringpostMetricsServiceRole67C38DA0",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "monitoringpostMetricsLogGroup670566A8": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-postMetrics",
            ],
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringpostMetricsServiceRole67C38DA0": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "dynamoDataCatalogmetricsTableD896DDA5",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": "cloudwatch:PutMetricData",
              "Condition": Object {
                "StringEquals": Object {
                  "cloudwatch:namespace": "AmazonS3GlacierReFreezer",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "permitPostMetrics",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "Roles": Array [
          Object {
            "Ref": "monitoringpostMetricsServiceRole67C38DA0",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "monitoringrequestArchivesLogGroup70D7C9C5": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-requestArchives",
            ],
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringrequestInventoryLogGroupB7C9607D": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-requestInventory",
            ],
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringsendAnonymousStatsLogGroup0C9968BB": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-sendAnonymousStats",
            ],
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringstageTwoOrchestratorLogGroup62996996": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/states/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-stageTwoOrchestrator",
            ],
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "stageFourcalculateTreehashC1E7BFB4": Object {
      "DependsOn": Array [
        "stageFourcalculateTreehashServiceRoleDefaultPolicyBF15D3E2",
        "stageFourcalculateTreehashServiceRoleC753ABC4",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters64575d4a11d974ec52b55af18bc6083309c4556861988baf35ecad9aab5aadfeS3Bucket42A6D7A1",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters64575d4a11d974ec52b55af18bc6083309c4556861988baf35ecad9aab5aadfeS3VersionKeyDF57DFE2",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters64575d4a11d974ec52b55af18bc6083309c4556861988baf35ecad9aab5aadfeS3VersionKeyDF57DFE2",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "DESTINATION_BUCKET": Object {
              "Ref": "DestinationBucket",
            },
            "SQS_ARCHIVE_NOTIFICATION": Object {
              "Fn::GetAtt": Array [
                "stageThreearchivenotificationqueue402FED49",
                "QueueName",
              ],
            },
            "STAGING_BUCKET": Object {
              "Ref": "stagingBucket",
            },
            "STAGING_BUCKET_PREFIX": "stagingdata",
            "STATUS_TABLE": Object {
              "Ref": "dynamoDataCatalogstatusTableA9EC97D3",
            },
            "STORAGE_CLASS": Object {
              "Ref": "DestinationStorageClass",
            },
          },
        },
        "FunctionName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-calculateTreehash",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 50,
        "Role": Object {
          "Fn::GetAtt": Array [
            "stageFourcalculateTreehashServiceRoleC753ABC4",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageFourcalculateTreehashServiceRoleC753ABC4": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageFourcalculateTreehashServiceRoleDefaultPolicyBF15D3E2": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DestinationBucket",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DestinationBucket",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "dynamoDataCatalogstatusTableA9EC97D3",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "dynamoDataCatalogstatusTableA9EC97D3",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "stageThreetreehashcalcqueue77403987",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageFourcalculateTreehashServiceRoleDefaultPolicyBF15D3E2",
        "Roles": Array [
          Object {
            "Ref": "stageFourcalculateTreehashServiceRoleC753ABC4",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageFourcalculateTreehashSqsEventSourceteststackstageThreetreehashcalcqueueE81E0D736E8DC7E1": Object {
      "Properties": Object {
        "BatchSize": 1,
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "stageThreetreehashcalcqueue77403987",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "stageFourcalculateTreehashC1E7BFB4",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "stageOnedownloadInventory7367D822": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "stageOnedownloadInventoryServiceRoleDefaultPolicy8C7F6A4F",
        "stageOnedownloadInventoryServiceRole411212F6",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters6cfd7607a87ee5914eeeafada9959b33754b7512ea44c83f7a98630c41718867S3BucketFD95145E",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6cfd7607a87ee5914eeeafada9959b33754b7512ea44c83f7a98630c41718867S3VersionKeyB949D4AD",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6cfd7607a87ee5914eeeafada9959b33754b7512ea44c83f7a98630c41718867S3VersionKeyB949D4AD",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "BUCKET_PREFIX": "inventory",
            "GLACIER_VAULT": Object {
              "Ref": "SourceVault",
            },
            "INVENTORY_BUCKET": Object {
              "Ref": "stagingBucket",
            },
            "INVENTORY_PART_FUNCTION": Object {
              "Ref": "stageOnedownloadInventoryPartC8387F3A",
            },
            "STAGE_TWO_SF_ARN": Object {
              "Ref": "stageTwoOrchestrator",
            },
          },
        },
        "FunctionName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-downloadInventory",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "stageOnedownloadInventoryServiceRole411212F6",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageOnedownloadInventoryAllowInvoketeststackstageOnevaultInventoryTopic9CB7DD07115692CF": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "stageOnedownloadInventory7367D822",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": Object {
          "Ref": "vaultInventoryTopic",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "stageOnedownloadInventoryPartC8387F3A": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "stageOnedownloadInventoryPartServiceRoleDefaultPolicy59CA83BD",
        "stageOnedownloadInventoryPartServiceRole73BC3A9B",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters4992e7a127be7e52d20430a45e3d8b21285eeed4f46c2b372446c4746686136cS3BucketC1F5C059",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4992e7a127be7e52d20430a45e3d8b21285eeed4f46c2b372446c4746686136cS3VersionKey14678C00",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters4992e7a127be7e52d20430a45e3d8b21285eeed4f46c2b372446c4746686136cS3VersionKey14678C00",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "FunctionName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-downloadInventoryPart",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "stageOnedownloadInventoryPartServiceRole73BC3A9B",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageOnedownloadInventoryPartServiceRole73BC3A9B": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageOnedownloadInventoryPartServiceRoleDefaultPolicy59CA83BD": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "glacier:GetJobOutput",
                "glacier:InitiateJob",
              ],
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:glacier:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":vaults/",
                    Object {
                      "Ref": "SourceVault",
                    },
                  ],
                ],
              },
              "Sid": "permitGlacier",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageOnedownloadInventoryPartServiceRoleDefaultPolicy59CA83BD",
        "Roles": Array [
          Object {
            "Ref": "stageOnedownloadInventoryPartServiceRole73BC3A9B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageOnedownloadInventoryServiceRole411212F6": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageOnedownloadInventoryServiceRoleDefaultPolicy8C7F6A4F": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "glacier:GetJobOutput",
                "glacier:InitiateJob",
              ],
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:glacier:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":vaults/",
                    Object {
                      "Ref": "SourceVault",
                    },
                  ],
                ],
              },
              "Sid": "permitGlacier",
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "stageOnedownloadInventoryPartC8387F3A",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": Object {
                "Ref": "stageTwoOrchestrator",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageOnedownloadInventoryServiceRoleDefaultPolicy8C7F6A4F",
        "Roles": Array [
          Object {
            "Ref": "stageOnedownloadInventoryServiceRole411212F6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageOnedownloadInventoryvaultInventoryTopicBC4D1E1D": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "Endpoint": Object {
          "Fn::GetAtt": Array [
            "stageOnedownloadInventory7367D822",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": Object {
          "Ref": "vaultInventoryTopic",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "stageOnerequestInventory8924DF79": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "stageOnerequestInventoryServiceRoleDefaultPolicyE7A49E61",
        "stageOnerequestInventoryServiceRole5904E2D3",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters6f44b6e9e590716ba5da1b6a6eda781bcb02dfe5e749cb4659bd389610f43658S3Bucket53A85F49",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6f44b6e9e590716ba5da1b6a6eda781bcb02dfe5e749cb4659bd389610f43658S3VersionKeyB9F30624",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters6f44b6e9e590716ba5da1b6a6eda781bcb02dfe5e749cb4659bd389610f43658S3VersionKeyB9F30624",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "CLOUDTRAIL_EXPORT_CONF": Object {
              "Ref": "CloudTrailExportConfirmation",
            },
            "DESTINATION_BUCKET": Object {
              "Ref": "DestinationBucket",
            },
            "FILELIST_LOCATION": Object {
              "Ref": "FilelistS3Location",
            },
            "LOG_BUCKET": Object {
              "Ref": "AccessLogs",
            },
            "SNS_TOPIC_ARN": Object {
              "Ref": "vaultInventoryTopic",
            },
            "SNS_VAULT_CONF": Object {
              "Ref": "SNSTopicForVaultConfirmation",
            },
            "SOURCE_VAULT": Object {
              "Ref": "SourceVault",
            },
            "STAGING_BUCKET": Object {
              "Ref": "stagingBucket",
            },
            "STAGING_LIST_PREFIX": "filelist",
          },
        },
        "FunctionName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-requestInventory",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "stageOnerequestInventoryServiceRole5904E2D3",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageOnerequestInventoryServiceRole5904E2D3": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageOnerequestInventoryServiceRoleDefaultPolicyE7A49E61": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "AccessLogs",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "AccessLogs",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DestinationBucket",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Ref": "DestinationBucket",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:ListBucket",
                "s3:ListBucketVersions",
                "s3:ListBucketMultipartUploads",
                "s3:ListMultipartUploadParts",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:GetObjectAcl",
                "s3:PutObject",
                "s3:DeleteObject",
                "s3:AbortMultipartUpload",
              ],
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:s3:::",
                    Object {
                      "Ref": "FilelistS3Location",
                    },
                  ],
                ],
              },
              "Sid": "allowStagingAccess",
            },
            Object {
              "Action": Array [
                "glacier:GetJobOutput",
                "glacier:InitiateJob",
              ],
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:glacier:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":vaults/",
                    Object {
                      "Ref": "SourceVault",
                    },
                  ],
                ],
              },
              "Sid": "permitGlacier",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageOnerequestInventoryServiceRoleDefaultPolicyE7A49E61",
        "Roles": Array [
          Object {
            "Ref": "stageOnerequestInventoryServiceRole5904E2D3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageOnerequestInventoryTriggerB9B55962": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "stageOnerequestInventory8924DF79",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "stageOnevaultInventoryTopicPolicyF3FF58AF": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sns:GetTopicAttributes",
                "sns:SetTopicAttributes",
                "sns:AddPermission",
                "sns:RemovePermission",
                "sns:DeleteTopic",
                "sns:Subscribe",
                "sns:ListSubscriptionsByTopic",
                "sns:Publish",
              ],
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Ref": "vaultInventoryTopic",
              },
              "Sid": "denyInsecureTransport",
            },
            Object {
              "Action": Array [
                "sns:GetTopicAttributes",
                "sns:SetTopicAttributes",
                "sns:AddPermission",
                "sns:RemovePermission",
                "sns:DeleteTopic",
                "sns:Subscribe",
                "sns:ListSubscriptionsByTopic",
                "sns:Publish",
                "sns:Receive",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "AWS:SourceOwner": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": "*",
              "Resource": Object {
                "Ref": "vaultInventoryTopic",
              },
              "Sid": "permitServie",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": Array [
          Object {
            "Ref": "vaultInventoryTopic",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
    "stageThreearchiveNotificationTopic5D1E2506": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "TopicName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-archive-retrieval-notification",
            ],
          ],
        },
      },
      "Type": "AWS::SNS::Topic",
    },
    "stageThreearchiveNotificationTopicPolicy6AE60F03": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sns:GetTopicAttributes",
                "sns:SetTopicAttributes",
                "sns:AddPermission",
                "sns:RemovePermission",
                "sns:DeleteTopic",
                "sns:Subscribe",
                "sns:ListSubscriptionsByTopic",
                "sns:Publish",
                "sns:Receive",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "AWS:SourceOwner": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": "*",
              "Resource": Object {
                "Ref": "stageThreearchiveNotificationTopic5D1E2506",
              },
              "Sid": "permitServie",
            },
            Object {
              "Action": Array [
                "sns:GetTopicAttributes",
                "sns:SetTopicAttributes",
                "sns:AddPermission",
                "sns:RemovePermission",
                "sns:DeleteTopic",
                "sns:Subscribe",
                "sns:ListSubscriptionsByTopic",
                "sns:Publish",
              ],
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Ref": "stageThreearchiveNotificationTopic5D1E2506",
              },
              "Sid": "denyInsecureTransport",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": Array [
          Object {
            "Ref": "stageThreearchiveNotificationTopic5D1E2506",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
    "stageThreearchivenotificationqueue402FED49": Object {
      "Properties": Object {
        "QueueName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-archive-notification-queue",
            ],
          ],
        },
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "VisibilityTimeout": 905,
      },
      "Type": "AWS::SQS::Queue",
    },
    "stageThreearchivenotificationqueuePolicy277C3061": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sqs:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "stageThreearchivenotificationqueue402FED49",
                  "Arn",
                ],
              },
              "Sid": "denyInsecureTransport",
            },
            Object {
              "Action": "sqs:SendMessage",
              "Condition": Object {
                "ArnEquals": Object {
                  "aws:SourceArn": Object {
                    "Ref": "stageThreearchiveNotificationTopic5D1E2506",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "sns.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "stageThreearchivenotificationqueue402FED49",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "stageThreearchivenotificationqueue402FED49",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "stageThreearchivenotificationqueueteststackstageThreearchiveNotificationTopic9A6C2AC8206B0123": Object {
      "Properties": Object {
        "Endpoint": Object {
          "Fn::GetAtt": Array [
            "stageThreearchivenotificationqueue402FED49",
            "Arn",
          ],
        },
        "Protocol": "sqs",
        "TopicArn": Object {
          "Ref": "stageThreearchiveNotificationTopic5D1E2506",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "stageThreechunkcopyqueue6E6E5A95": Object {
      "Properties": Object {
        "QueueName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-chunk-copy-queue",
            ],
          ],
        },
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "VisibilityTimeout": 905,
      },
      "Type": "AWS::SQS::Queue",
    },
    "stageThreechunkcopyqueuePolicy1B170AFE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sqs:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "stageThreechunkcopyqueue6E6E5A95",
                  "Arn",
                ],
              },
              "Sid": "denyInsecureTransport",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "stageThreechunkcopyqueue6E6E5A95",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "stageThreecopyArchive0F10719D": Object {
      "DependsOn": Array [
        "stageThreecopyArchiveServiceRoleDefaultPolicyA4E27715",
        "stageThreecopyArchiveServiceRoleAAA3BAD9",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameterscac40dd75e680d661e66e3bf5a0bba8a142f38b2bc3178ea3c93494ef8786f68S3Bucket77A37061",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterscac40dd75e680d661e66e3bf5a0bba8a142f38b2bc3178ea3c93494ef8786f68S3VersionKeyD4C9C0A0",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterscac40dd75e680d661e66e3bf5a0bba8a142f38b2bc3178ea3c93494ef8786f68S3VersionKeyD4C9C0A0",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "SQS_CHUNK": Object {
              "Fn::GetAtt": Array [
                "stageThreechunkcopyqueue6E6E5A95",
                "QueueName",
              ],
            },
            "SQS_HASH": Object {
              "Fn::GetAtt": Array [
                "stageThreetreehashcalcqueue77403987",
                "QueueName",
              ],
            },
            "STAGING_BUCKET": Object {
              "Ref": "stagingBucket",
            },
            "STAGING_BUCKET_PREFIX": "stagingdata",
            "STATUS_TABLE": Object {
              "Ref": "dynamoDataCatalogstatusTableA9EC97D3",
            },
            "VAULT": Object {
              "Ref": "SourceVault",
            },
          },
        },
        "FunctionName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-copyArchive",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 50,
        "Role": Object {
          "Fn::GetAtt": Array [
            "stageThreecopyArchiveServiceRoleAAA3BAD9",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageThreecopyArchiveServiceRoleAAA3BAD9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageThreecopyArchiveServiceRoleDefaultPolicyA4E27715": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "dynamoDataCatalogstatusTableA9EC97D3",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "dynamoDataCatalogstatusTableA9EC97D3",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "glacier:GetJobOutput",
                "glacier:InitiateJob",
              ],
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:glacier:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":vaults/",
                    Object {
                      "Ref": "SourceVault",
                    },
                  ],
                ],
              },
              "Sid": "permitGlacier",
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "stageThreechunkcopyqueue6E6E5A95",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "stageThreetreehashcalcqueue77403987",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "stageThreearchivenotificationqueue402FED49",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageThreecopyArchiveServiceRoleDefaultPolicyA4E27715",
        "Roles": Array [
          Object {
            "Ref": "stageThreecopyArchiveServiceRoleAAA3BAD9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageThreecopyArchiveSqsEventSourceteststackstageThreearchivenotificationqueue7E1D389E906E6BE0": Object {
      "Properties": Object {
        "BatchSize": 1,
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "stageThreearchivenotificationqueue402FED49",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "stageThreecopyArchive0F10719D",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "stageThreecopyChunk9A1B6F24": Object {
      "DependsOn": Array [
        "stageThreecopyChunkServiceRoleDefaultPolicyFDDCA56C",
        "stageThreecopyChunkServiceRole88E1F526",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameterse63aeebc152892bb5b362662f7fb61da6c0cd6cb9151f53891d7c717710aab8aS3Bucket4421C61A",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse63aeebc152892bb5b362662f7fb61da6c0cd6cb9151f53891d7c717710aab8aS3VersionKeyBB570786",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse63aeebc152892bb5b362662f7fb61da6c0cd6cb9151f53891d7c717710aab8aS3VersionKeyBB570786",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "SQS_HASH": Object {
              "Fn::GetAtt": Array [
                "stageThreetreehashcalcqueue77403987",
                "QueueName",
              ],
            },
            "STAGING_BUCKET": Object {
              "Ref": "stagingBucket",
            },
            "STAGING_BUCKET_PREFIX": "stagingdata",
            "STATUS_TABLE": Object {
              "Ref": "dynamoDataCatalogstatusTableA9EC97D3",
            },
            "VAULT": Object {
              "Ref": "SourceVault",
            },
          },
        },
        "FunctionName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-copyChunk",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 30,
        "Role": Object {
          "Fn::GetAtt": Array [
            "stageThreecopyChunkServiceRole88E1F526",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageThreecopyChunkServiceRole88E1F526": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageThreecopyChunkServiceRoleDefaultPolicyFDDCA56C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "dynamoDataCatalogstatusTableA9EC97D3",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "dynamoDataCatalogstatusTableA9EC97D3",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "glacier:GetJobOutput",
                "glacier:InitiateJob",
              ],
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:glacier:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":vaults/",
                    Object {
                      "Ref": "SourceVault",
                    },
                  ],
                ],
              },
              "Sid": "permitGlacier",
            },
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "stageThreetreehashcalcqueue77403987",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "stageThreechunkcopyqueue6E6E5A95",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageThreecopyChunkServiceRoleDefaultPolicyFDDCA56C",
        "Roles": Array [
          Object {
            "Ref": "stageThreecopyChunkServiceRole88E1F526",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageThreecopyChunkSqsEventSourceteststackstageThreechunkcopyqueue346472D8BFACFC3D": Object {
      "Properties": Object {
        "BatchSize": 1,
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "stageThreechunkcopyqueue6E6E5A95",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "stageThreecopyChunk9A1B6F24",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "stageThreetreehashcalcqueue77403987": Object {
      "Properties": Object {
        "QueueName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-treehash-calc-queue",
            ],
          ],
        },
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "VisibilityTimeout": 905,
      },
      "Type": "AWS::SQS::Queue",
    },
    "stageThreetreehashcalcqueuePolicyAC24B291": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sqs:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "stageThreetreehashcalcqueue77403987",
                  "Arn",
                ],
              },
              "Sid": "denyInsecureTransport",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "stageThreetreehashcalcqueue77403987",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "stageTwoDeployGlueJobScriptD9AB96C6": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "stageTwoDeployGlueJobScriptServiceRoleDefaultPolicyD6DC7335",
        "stageTwoDeployGlueJobScriptServiceRoleE1F020B7",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersdf4e3db5885ffe5c62d78b25fbb2dc530f67091b9eff658212e4b60f853e3d0fS3Bucket41EC0D75",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersdf4e3db5885ffe5c62d78b25fbb2dc530f67091b9eff658212e4b60f853e3d0fS3VersionKey5B00C857",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersdf4e3db5885ffe5c62d78b25fbb2dc530f67091b9eff658212e4b60f853e3d0fS3VersionKey5B00C857",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "STAGING_BUCKET": Object {
              "Ref": "stagingBucket",
            },
          },
        },
        "FunctionName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-deployGlueJobScript",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "stageTwoDeployGlueJobScriptServiceRoleE1F020B7",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageTwoDeployGlueJobScriptServiceRoleDefaultPolicyD6DC7335": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageTwoDeployGlueJobScriptServiceRoleDefaultPolicyD6DC7335",
        "Roles": Array [
          Object {
            "Ref": "stageTwoDeployGlueJobScriptServiceRoleE1F020B7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageTwoDeployGlueJobScriptServiceRoleE1F020B7": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageTwoGluePartitionRole44AB165D": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "glue.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-glue-repartition-role",
            ],
          ],
        },
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageTwoGluePartitionRoleDefaultPolicyCB792103": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "athena:StartQueryExecution",
                "athena:GetQueryResults",
                "athena:GetWorkGroup",
                "athena:CancelQueryExecution",
                "athena:StopQueryExecution",
                "athena:GetQueryExecution",
                "glue:GetTable",
                "glue:UpdateTable",
                "glue:GetPartitions",
                "glue:BatchCreatePartition",
              ],
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      Object {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:athena:*:",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":workgroup/",
                      Object {
                        "Ref": "AWS::StackName",
                      },
                      "-glacier-refreezer-sol",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/",
                      Object {
                        "Ref": "glueDataCatalogInventoryTable05E5F37F",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/",
                      Object {
                        "Ref": "glueDataCatalogFilelistTable2224351B",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/",
                      Object {
                        "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
                      },
                    ],
                  ],
                },
              ],
              "Sid": "allowStagingAccess",
            },
            Object {
              "Action": "logs:*",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/cdk-glueJob:**",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws-glue/*:**",
                    ],
                  ],
                },
              ],
              "Sid": "allowLogging",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageTwoGluePartitionRoleDefaultPolicyCB792103",
        "Roles": Array [
          Object {
            "Ref": "stageTwoGluePartitionRole44AB165D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageTwoGlueRepartitionJob3EB94529": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "Command": Object {
          "Name": "glueetl",
          "ScriptLocation": Object {
            "Fn::Join": Array [
              "",
              Array [
                "s3://",
                Object {
                  "Ref": "stagingBucket",
                },
                "/glue/partition-inventory.py",
              ],
            ],
          },
        },
        "DefaultArguments": Object {
          "--DATABASE": Object {
            "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
          },
          "--FILENAME_TABLE": Object {
            "Ref": "glueDataCatalogFilelistTable2224351B",
          },
          "--INVENTORY_TABLE": Object {
            "Ref": "glueDataCatalogInventoryTable05E5F37F",
          },
          "--OUTPUT_TABLE": Object {
            "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
          },
          "--STAGING_BUCKET": Object {
            "Ref": "stagingBucket",
          },
          "--enable-continuous-cloudwatch-log": "true",
          "--enable-continuous-log-filter": "false",
          "--job-bookmark-option": "job-bookmark-disable",
        },
        "Description": "To repartition the inventory table",
        "ExecutionProperty": Object {
          "MaxConcurrentRuns": 1,
        },
        "GlueVersion": "2.0",
        "MaxCapacity": 5,
        "MaxRetries": 0,
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-glacier-refreezer",
            ],
          ],
        },
        "Role": Object {
          "Fn::GetAtt": Array [
            "stageTwoGluePartitionRole44AB165D",
            "Arn",
          ],
        },
        "Tags": Object {
          "solution": "amazon-s3-glacier-refreezer",
        },
      },
      "Type": "AWS::Glue::Job",
    },
    "stageTwoOrchestrator": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "stageTwoStepfunctionsOrchestratorRoleDefaultPolicy6576A802",
        "stageTwoStepfunctionsOrchestratorRole1165D332",
      ],
      "Properties": Object {
        "DefinitionString": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"StartAt\\":\\"Parallel Queries\\",\\"States\\":{\\"Parallel Queries\\":{\\"Type\\":\\"Parallel\\",\\"Next\\":\\"Merge Query Results\\",\\"Branches\\":[{\\"StartAt\\":\\"Start Inventory Query\\",\\"States\\":{\\"Start Inventory Query\\":{\\"Next\\":\\"Get Inventory Results\\",\\"Type\\":\\"Task\\",\\"OutputPath\\":\\"$.QueryExecution\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::athena:startQueryExecution.sync\\",\\"Parameters\\":{\\"QueryString\\":\\"SELECT COUNT(1) AS archiveCount, COALESCE(SUM(size),0) AS vaultSize FROM \\\\\\"",
              Object {
                "Ref": "glueDataCatalogInventoryTable05E5F37F",
              },
              "\\\\\\";\\",\\"QueryExecutionContext\\":{\\"Database\\":\\"",
              Object {
                "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
              },
              "\\"},\\"ResultConfiguration\\":{},\\"WorkGroup\\":\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "-glacier-refreezer-sol\\"}},\\"Get Inventory Results\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"OutputPath\\":\\"$.ResultSet.Rows[1]\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::athena:getQueryResults\\",\\"Parameters\\":{\\"QueryExecutionId.$\\":\\"$.QueryExecutionId\\"}}}},{\\"StartAt\\":\\"Start Partitioned Query\\",\\"States\\":{\\"Start Partitioned Query\\":{\\"Next\\":\\"Get Partitioned Results\\",\\"Type\\":\\"Task\\",\\"OutputPath\\":\\"$.QueryExecution\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::athena:startQueryExecution.sync\\",\\"Parameters\\":{\\"QueryString\\":\\"SELECT COUNT(1) AS archiveCount FROM \\\\\\"",
              Object {
                "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
              },
              "\\\\\\";\\",\\"QueryExecutionContext\\":{\\"Database\\":\\"",
              Object {
                "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
              },
              "\\"},\\"ResultConfiguration\\":{},\\"WorkGroup\\":\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "-glacier-refreezer-sol\\"}},\\"Get Partitioned Results\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"OutputPath\\":\\"$.ResultSet.Rows[1]\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::athena:getQueryResults\\",\\"Parameters\\":{\\"QueryExecutionId.$\\":\\"$.QueryExecutionId\\"}}}}]},\\"Merge Query Results\\":{\\"Type\\":\\"Pass\\",\\"ResultPath\\":\\"$\\",\\"Parameters\\":{\\"inventoryTable\\":{\\"archiveCount.$\\":\\"$[0].Data[0].VarCharValue\\",\\"vaultSize.$\\":\\"$[0].Data[1].VarCharValue\\"},\\"partitionedTable\\":{\\"archiveCount.$\\":\\"$[1].Data[0].VarCharValue\\"}},\\"Next\\":\\"Check Inventory State\\"},\\"Check Inventory State\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Variable\\":\\"$.inventoryTable.archiveCount\\",\\"StringEquals\\":\\"0\\",\\"Next\\":\\"FAIL: Inventory Empty\\"},{\\"And\\":[{\\"Not\\":{\\"Variable\\":\\"$.partitionedTable.archiveCount\\",\\"StringEquals\\":\\"0\\"}},{\\"Not\\":{\\"Variable\\":\\"$.inventoryTable.archiveCount\\",\\"StringEqualsPath\\":\\"$.partitionedTable.archiveCount\\"}}],\\"Next\\":\\"FAIL: Inventory-Partitioned Mismatch\\"}],\\"Default\\":\\"Partitioning Required ?\\"},\\"Partitioning Required ?\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Variable\\":\\"$.inventoryTable.archiveCount\\",\\"StringEqualsPath\\":\\"$.partitionedTable.archiveCount\\",\\"Next\\":\\"Start Max Partition Query\\"}],\\"Default\\":\\"Parallel Partitioning and Stats update\\"},\\"Parallel Partitioning and Stats update\\":{\\"Type\\":\\"Parallel\\",\\"Next\\":\\"Start Max Partition Query\\",\\"Branches\\":[{\\"StartAt\\":\\"Run Glue Partitioning\\",\\"States\\":{\\"Run Glue Partitioning\\":{\\"End\\":true,\\"Type\\":\\"Task\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::glue:startJobRun.sync\\",\\"Parameters\\":{\\"JobName\\":\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "-glacier-refreezer\\"}}}},{\\"StartAt\\":\\"Update Metrics Table\\",\\"States\\":{\\"Update Metrics Table\\":{\\"Next\\":\\"Send Anonymous Statistics\\",\\"Type\\":\\"Task\\",\\"ResultPath\\":\\"$.putItemResult\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem\\",\\"Parameters\\":{\\"Item\\":{\\"pk\\":{\\"S\\":\\"count\\"},\\"total\\":{\\"N.$\\":\\"$.inventoryTable.archiveCount\\"}},\\"TableName\\":\\"",
              Object {
                "Ref": "dynamoDataCatalogmetricsTableD896DDA5",
              },
              "\\"}},\\"Send Anonymous Statistics\\":{\\"End\\":true,\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2},{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2}],\\"Catch\\":[{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"Next\\":\\"Ignore SendStats Errors\\"}],\\"Type\\":\\"Task\\",\\"InputPath\\":\\"$.inventoryTable\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "statisticsSendAnonymousStatsD2E34707",
                  "Arn",
                ],
              },
              "\\",\\"Payload.$\\":\\"$\\"}},\\"Ignore SendStats Errors\\":{\\"Type\\":\\"Pass\\",\\"End\\":true}}}]},\\"Start Max Partition Query\\":{\\"Next\\":\\"Get Max Partition Result\\",\\"Type\\":\\"Task\\",\\"OutputPath\\":\\"$.QueryExecution\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::athena:startQueryExecution.sync\\",\\"Parameters\\":{\\"QueryString\\":\\"SELECT '{ \\\\\\"nextPartition\\\\\\": 0, \\\\\\"maxPartition\\\\\\" :' || CAST(MAX(part) AS VARCHAR) || '}'FROM \\\\\\"",
              Object {
                "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
              },
              "\\\\\\";\\",\\"QueryExecutionContext\\":{\\"Database\\":\\"",
              Object {
                "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
              },
              "\\"},\\"ResultConfiguration\\":{},\\"WorkGroup\\":\\"",
              Object {
                "Ref": "AWS::StackName",
              },
              "-glacier-refreezer-sol\\"}},\\"Get Max Partition Result\\":{\\"Next\\":\\"Request Archives Retrieval\\",\\"Type\\":\\"Task\\",\\"OutputPath\\":\\"$.result\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::athena:getQueryResults\\",\\"Parameters\\":{\\"QueryExecutionId.$\\":\\"$.QueryExecutionId\\"},\\"ResultSelector\\":{\\"result.$\\":\\"States.StringToJson($.ResultSet.Rows[1].Data[0].VarCharValue)\\"}},\\"Request Archives Retrieval\\":{\\"Next\\":\\"Is Complete?\\",\\"Retry\\":[{\\"ErrorEquals\\":[\\"Lambda.ServiceException\\",\\"Lambda.AWSLambdaException\\",\\"Lambda.SdkClientException\\"],\\"IntervalSeconds\\":2,\\"MaxAttempts\\":6,\\"BackoffRate\\":2},{\\"ErrorEquals\\":[\\"States.ALL\\"],\\"IntervalSeconds\\":15,\\"MaxAttempts\\":10000,\\"BackoffRate\\":1}],\\"Type\\":\\"Task\\",\\"OutputPath\\":\\"$.Payload\\",\\"Resource\\":\\"arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke\\",\\"Parameters\\":{\\"FunctionName\\":\\"",
              Object {
                "Fn::GetAtt": Array [
                  "stageTwoRequestArchives06ED0831",
                  "Arn",
                ],
              },
              "\\",\\"Payload.$\\":\\"$\\"}},\\"Is Complete?\\":{\\"Type\\":\\"Choice\\",\\"Choices\\":[{\\"Variable\\":\\"$.nextPartition\\",\\"NumericGreaterThanPath\\":\\"$.maxPartition\\",\\"Next\\":\\"Success\\"}],\\"Default\\":\\"Request Archives Retrieval\\"},\\"Success\\":{\\"Type\\":\\"Succeed\\"},\\"FAIL: Inventory Empty\\":{\\"Type\\":\\"Fail\\",\\"Error\\":\\"Vault Inventory Table is empty. Has it been downloaded?\\"},\\"FAIL: Inventory-Partitioned Mismatch\\":{\\"Type\\":\\"Fail\\",\\"Error\\":\\"Inventory and Partitioned table counts are greater than 0 and do not match. Cannot proceed.\\"}}}",
            ],
          ],
        },
        "LoggingConfiguration": Object {
          "Destinations": Array [
            Object {
              "CloudWatchLogsLogGroup": Object {
                "LogGroupArn": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/states/",
                      Object {
                        "Ref": "AWS::StackName",
                      },
                      "-stageTwoOrchestrator:*",
                    ],
                  ],
                },
              },
            },
          ],
          "Level": "ALL",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "stageTwoStepfunctionsOrchestratorRole1165D332",
            "Arn",
          ],
        },
        "StateMachineName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-stageTwoOrchestrator",
            ],
          ],
        },
        "StateMachineType": "STANDARD",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::StepFunctions::StateMachine",
    },
    "stageTwoRequestArchives06ED0831": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "stageTwoRequestArchivesServiceRoleDefaultPolicy194B1034",
        "stageTwoRequestArchivesServiceRoleE1F1691B",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersbbf61143dbfbe69ac56b90a0201339520aee10bb5286954f9545e5b5d9c98f30S3Bucket7AB0C263",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbbf61143dbfbe69ac56b90a0201339520aee10bb5286954f9545e5b5d9c98f30S3VersionKey5BC4A3EC",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbbf61143dbfbe69ac56b90a0201339520aee10bb5286954f9545e5b5d9c98f30S3VersionKey5BC4A3EC",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "ATHENA_WORKGROUP": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "-glacier-refreezer-sol",
                ],
              ],
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATABASE": Object {
              "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
            },
            "PARTITIONED_INVENTORY_TABLE": Object {
              "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
            },
            "SNS_TOPIC": Object {
              "Ref": "stageThreearchiveNotificationTopic5D1E2506",
            },
            "STAGING_BUCKET": Object {
              "Ref": "stagingBucket",
            },
            "STATUS_TABLE": Object {
              "Ref": "dynamoDataCatalogstatusTableA9EC97D3",
            },
            "TIER": Object {
              "Ref": "GlacierRetrievalTier",
            },
            "VAULT": Object {
              "Ref": "SourceVault",
            },
          },
        },
        "FunctionName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-requestArchives",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": Object {
          "Fn::GetAtt": Array [
            "stageTwoRequestArchivesServiceRoleE1F1691B",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageTwoRequestArchivesServiceRoleDefaultPolicy194B1034": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "athena:StartQueryExecution",
                "athena:GetQueryResults",
                "athena:GetWorkGroup",
                "athena:CancelQueryExecution",
                "athena:StopQueryExecution",
                "athena:GetQueryExecution",
                "glue:GetTable",
                "glue:UpdateTable",
                "glue:GetPartitions",
                "glue:BatchCreatePartition",
              ],
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      Object {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:athena:*:",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":workgroup/",
                      Object {
                        "Ref": "AWS::StackName",
                      },
                      "-glacier-refreezer-sol",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/",
                      Object {
                        "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
                      },
                    ],
                  ],
                },
              ],
              "Sid": "allowStagingAccess",
            },
            Object {
              "Action": Array [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "dynamoDataCatalogstatusTableA9EC97D3",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "dynamoDataCatalogstatusTableA9EC97D3",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "glacier:GetJobOutput",
                "glacier:InitiateJob",
              ],
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:glacier:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":vaults/",
                    Object {
                      "Ref": "SourceVault",
                    },
                  ],
                ],
              },
              "Sid": "permitGlacier",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageTwoRequestArchivesServiceRoleDefaultPolicy194B1034",
        "Roles": Array [
          Object {
            "Ref": "stageTwoRequestArchivesServiceRoleE1F1691B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageTwoRequestArchivesServiceRoleE1F1691B": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageTwoStepfunctionsOrchestratorRole1165D332": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "states.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageTwoStepfunctionsOrchestratorRoleDefaultPolicy6576A802": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "stageTwoRequestArchives06ED0831",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "statisticsSendAnonymousStatsD2E34707",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "dynamoDataCatalogmetricsTableD896DDA5",
                    "Arn",
                  ],
                },
                Object {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            Object {
              "Action": Array [
                "athena:StartQueryExecution",
                "athena:GetQueryResults",
                "athena:GetWorkGroup",
                "athena:CancelQueryExecution",
                "athena:StopQueryExecution",
                "athena:GetQueryExecution",
                "glue:GetTable",
                "glue:UpdateTable",
                "glue:GetPartitions",
                "glue:BatchCreatePartition",
              ],
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      Object {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:aws:athena:*:",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":workgroup/",
                      Object {
                        "Ref": "AWS::StackName",
                      },
                      "-glacier-refreezer-sol",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/",
                      Object {
                        "Ref": "glueDataCatalogInventoryTable05E5F37F",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/",
                      Object {
                        "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
                      },
                    ],
                  ],
                },
              ],
              "Sid": "allowStagingAccess",
            },
            Object {
              "Action": Array [
                "glue:StartJobRun",
                "glue:GetJobRun",
                "glue:GetJobRuns",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:glue:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":job/",
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "-glacier-refreezer",
                  ],
                ],
              },
              "Sid": "allowGlueJobRun",
            },
            Object {
              "Action": Array [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "athena:getDataCatalog",
                "athena:startQueryExecution",
                "athena:getQueryExecution",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":athena:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":datacatalog/AwsDataCatalog",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":athena:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":workgroup/",
                      Object {
                        "Ref": "AWS::StackName",
                      },
                      "-glacier-refreezer-sol",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:CreateBucket",
                "s3:ListBucket",
                "s3:GetBucketLocation",
                "s3:GetObject",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:ListBucketMultipartUploads",
                "s3:ListMultipartUploadParts",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "lakeformation:GetDataAccess",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "glue:BatchCreatePartition",
                "glue:BatchDeletePartition",
                "glue:BatchDeleteTable",
                "glue:BatchGetPartition",
                "glue:CreateDatabase",
                "glue:CreatePartition",
                "glue:CreateTable",
                "glue:DeleteDatabase",
                "glue:DeletePartition",
                "glue:DeleteTable",
                "glue:GetDatabase",
                "glue:GetDatabases",
                "glue:GetPartition",
                "glue:GetPartitions",
                "glue:GetTable",
                "glue:GetTables",
                "glue:UpdateDatabase",
                "glue:UpdatePartition",
                "glue:UpdateTable",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      Object {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":userDefinedFunction/",
                      Object {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "athena:getQueryResults",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "glue:StartJobRun",
                "glue:GetJobRun",
                "glue:GetJobRuns",
                "glue:BatchStopJobRun",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":glue:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":job/",
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "-glacier-refreezer",
                  ],
                ],
              },
            },
            Object {
              "Action": "dynamodb:PutItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":dynamodb:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":table/",
                    Object {
                      "Ref": "dynamoDataCatalogmetricsTableD896DDA5",
                    },
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageTwoStepfunctionsOrchestratorRoleDefaultPolicy6576A802",
        "Roles": Array [
          Object {
            "Ref": "stageTwoStepfunctionsOrchestratorRole1165D332",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageTwodeployGlueJobScriptTriggerBF203D6E": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "stageTwoDeployGlueJobScriptD9AB96C6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "stagingBucket": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W51",
              "reason": "This bucket does not need a bucket policy",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "AccessLogs",
          },
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "stagingBucketStagingBucketPolicyCD743064": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "stagingBucket",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": "*",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "statisticsSendAnonymousStatsD2E34707": Object {
      "DependsOn": Array [
        "statisticsSendAnonymousStatsServiceRoleFEE7F44D",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters02f12707d0bffa8954af14eb48309416638de8dd46f2ceaa0494cad1b6e3175cS3Bucket3C842F04",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters02f12707d0bffa8954af14eb48309416638de8dd46f2ceaa0494cad1b6e3175cS3VersionKey671D5B94",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters02f12707d0bffa8954af14eb48309416638de8dd46f2ceaa0494cad1b6e3175cS3VersionKey671D5B94",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "This function sends anonymous statistics to the AWS Solutions Builders team",
        "Environment": Object {
          "Variables": Object {
            "REGION": Object {
              "Ref": "AWS::Region",
            },
            "RETRIEVAL_TIER": Object {
              "Ref": "GlacierRetrievalTier",
            },
            "SEND_ANONYMOUS_STATISTICS": Object {
              "Fn::FindInMap": Array [
                "AnonymousStatisticsMap",
                "SendAnonymousStatistics",
                "Data",
              ],
            },
            "SOLUTION_ID": "SO0140",
            "STORAGE_CLASS": Object {
              "Ref": "DestinationStorageClass",
            },
            "UUID": Object {
              "Fn::GetAtt": Array [
                "statisticsgenerateUuidTriggerC26142B4",
                "UUID",
              ],
            },
            "VERSION": "%%VERSION%%",
          },
        },
        "FunctionName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-sendAnonymousStats",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "statisticsSendAnonymousStatsServiceRoleFEE7F44D",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "statisticsSendAnonymousStatsServiceRoleFEE7F44D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "statisticsgenerateUuidD1DABEF9": Object {
      "DependsOn": Array [
        "statisticsgenerateUuidRole29E0057A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersf9bb0c009ec5f621cba3fcfea4f56330abcb2a532d3f2622e1253d0a03653299S3Bucket98EC60A2",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf9bb0c009ec5f621cba3fcfea4f56330abcb2a532d3f2622e1253d0a03653299S3VersionKeyA219EACB",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersf9bb0c009ec5f621cba3fcfea4f56330abcb2a532d3f2622e1253d0a03653299S3VersionKeyA219EACB",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Description": "This function generates UUID for each deployment",
        "FunctionName": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-generateUuid",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": Object {
          "Fn::GetAtt": Array [
            "statisticsgenerateUuidRole29E0057A",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "statisticsgenerateUuidLogGroup5803AF62": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "AWS::StackName",
              },
              "-generateUuid",
            ],
          ],
        },
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "statisticsgenerateUuidRole29E0057A": Object {
      "DependsOn": Array [
        "statisticsgenerateUuidLogGroup5803AF62",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "statisticsgenerateUuidTriggerC26142B4": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "statisticsgenerateUuidD1DABEF9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "vaultInventoryTopic": Object {
      "DependsOn": Array [
        "monitoringcalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogstatusTableDC30348BC2B7F631",
        "monitoringcalculateMetrics2AD3D7FA",
        "monitoringcalculateMetricsServiceRoleDefaultPolicyA9458FB6",
        "monitoringcalculateMetricsServiceRole67BC8BC3",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringcopyArchiveLogGroupBB702B1B",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringpostMetrics42F37764",
        "monitoringpostMetricsServiceRoleDefaultPolicy8BA2D595",
        "monitoringpostMetricsServiceRole67C38DA0",
        "monitoringpostMetricScheduleAllowEventRuleteststackmonitoringpostMetricScheduleF95992D5AD258B19",
        "monitoringpostMetricSchedule6EF27DB5",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringstageTwoOrchestratorLogGroup62996996",
      ],
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::SNS::Topic",
    },
  },
}
`;
