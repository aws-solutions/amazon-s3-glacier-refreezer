// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Stack Snapshot 1`] = `
{
  "Description": "(SO0140) - Amazon S3 Glacier Re:Freezer copies Amazon S3 Glacier Vault archives to Amazon S3 Bucket. Version %%VERSION%%",
  "Mappings": {
    "AnonymousStatisticsMap": {
      "SendAnonymousStatistics": {
        "Data": "Yes",
      },
    },
    "ServiceprincipalMap": {
      "af-south-1": {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-south-2": {
        "states": "states.ap-south-2.amazonaws.com",
      },
      "ap-southeast-1": {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ca-central-1": {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-central-2": {
        "states": "states.eu-central-2.amazonaws.com",
      },
      "eu-north-1": {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "me-central-1": {
        "states": "states.me-central-1.amazonaws.com",
      },
      "me-south-1": {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": {
        "states": "states.amazonaws.com",
      },
      "us-west-1": {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Required input parameters",
          },
          "Parameters": [
            "SourceVault",
            "DestinationBucket",
            "DestinationStorageClass",
            "GlacierRetrievalTier",
          ],
        },
        {
          "Label": {
            "default": "Confirmation to avoid excessive costs",
          },
          "Parameters": [
            "CloudTrailExportConfirmation",
            "SNSTopicForVaultConfirmation",
          ],
        },
        {
          "Label": {
            "default": "[OPTIONAL] External filenames override for ArchiveDescription",
          },
          "Parameters": [
            "FilelistS3Location",
          ],
        },
      ],
      "ParameterLabels": {
        "CloudTrailExportConfirmation": {
          "default": "Have you checked that there is only one Cloudtrail export to S3 bucket configured in your account?",
        },
        "DestinationBucket": {
          "default": "S3 destination bucket name",
        },
        "DestinationStorageClass": {
          "default": "S3 destination storage class",
        },
        "FilelistS3Location": {
          "default": "Amazon S3 location of the CSV file as BUCKET/FILEPATH",
        },
        "GlacierRetrievalTier": {
          "default": "Glacier retrieval tier",
        },
        "SNSTopicForVaultConfirmation": {
          "default": "Has default SNS notification topic on the vault been disabled or is it acceptable to receive notification for ALL archives in the vault?",
        },
        "SourceVault": {
          "default": "Source Glacier vault name",
        },
      },
    },
  },
  "Outputs": {
    "CloudTrailExportConfirmationSelection": {
      "Description": "Selected option for CloudTrail Export confirmation",
      "Value": {
        "Ref": "CloudTrailExportConfirmation",
      },
    },
    "SNSTopicForVaultConfirmationSelection": {
      "Description": "Selected option for SNS Topic for Vault confirmation",
      "Value": {
        "Ref": "SNSTopicForVaultConfirmation",
      },
    },
    "StagingBucketName": {
      "Description": "Staging Bucket Name",
      "Value": {
        "Ref": "stagingBucket",
      },
    },
    "dashboardUrl": {
      "Description": "Progress Dashboard URL",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "AWS::Region",
            },
            ".console.aws.amazon.com/cloudwatch/home?region=",
            {
              "Ref": "AWS::Region",
            },
            "#dashboards:name=",
            {
              "Ref": "AWS::StackName",
            },
            "-Amazon-S3-Glacier-ReFreezer;accountId=",
            {
              "Ref": "AWS::AccountId",
            },
          ],
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
    "CloudTrailExportConfirmation": {
      "AllowedValues": [
        "Yes",
        "No",
      ],
      "Type": "String",
    },
    "DestinationBucket": {
      "AllowedPattern": ".+",
      "Type": "String",
    },
    "DestinationStorageClass": {
      "AllowedValues": [
        "STANDARD",
        "INTELLIGENT_TIERING",
        "STANDARD_IA",
        "ONEZONE_IA",
        "GLACIER_IR",
        "GLACIER",
        "DEEP_ARCHIVE",
      ],
      "Default": "STANDARD",
      "Type": "String",
    },
    "FilelistS3Location": {
      "Default": "",
      "Type": "String",
    },
    "GlacierRetrievalTier": {
      "AllowedValues": [
        "Bulk",
        "Standard",
        "Expedited",
      ],
      "Default": "Bulk",
      "Type": "String",
    },
    "SNSTopicForVaultConfirmation": {
      "AllowedValues": [
        "Yes",
        "No",
      ],
      "Type": "String",
    },
    "SourceVault": {
      "AllowedPattern": ".+",
      "Type": "String",
    },
  },
  "Resources": {
    "ArchiveNotificationsPolicyB2E509DE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sns:GetTopicAttributes",
                "sns:SetTopicAttributes",
                "sns:AddPermission",
                "sns:RemovePermission",
                "sns:DeleteTopic",
                "sns:Subscribe",
                "sns:ListSubscriptionsByTopic",
                "sns:Publish",
                "sns:Receive",
              ],
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "glacier.amazonaws.com",
              },
              "Resource": {
                "Ref": "archiveNotifications",
              },
              "Sid": "permitService",
            },
            {
              "Action": [
                "sns:GetTopicAttributes",
                "sns:SetTopicAttributes",
                "sns:AddPermission",
                "sns:RemovePermission",
                "sns:DeleteTopic",
                "sns:Subscribe",
                "sns:ListSubscriptionsByTopic",
                "sns:Publish",
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Ref": "archiveNotifications",
              },
              "Sid": "denyInsecureTransport",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": [
          {
            "Ref": "archiveNotifications",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
    "archiveNotifications": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W47",
              "reason": "Non sensitive metadata - encryption is not required and cost inefficient",
            },
          ],
        },
      },
      "Properties": {
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::SNS::Topic",
    },
    "dynamoDataCatalogMetricsTable174C007B": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W28",
              "reason": "Transient table - updates must be through deletion/redeployment of the stack only",
            },
            {
              "id": "W74",
              "reason": "Metadata table - no encryption required",
            },
          ],
        },
      },
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "pk",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "KeySchema": [
          {
            "AttributeName": "pk",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "TableName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-grf-job-metrics",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "dynamoDataCatalogStatusTableE9ACB88F": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W28",
              "reason": "Transient table - updates must be through deletion/redeployment of the stack only",
            },
            {
              "id": "W74",
              "reason": "Metadata table - no encryption required",
            },
          ],
        },
      },
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "aid",
            "AttributeType": "S",
          },
          {
            "AttributeName": "pid",
            "AttributeType": "N",
          },
          {
            "AttributeName": "ifn",
            "AttributeType": "N",
          },
          {
            "AttributeName": "fname",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PROVISIONED",
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "max-file-index",
            "KeySchema": [
              {
                "AttributeName": "pid",
                "KeyType": "HASH",
              },
              {
                "AttributeName": "ifn",
                "KeyType": "RANGE",
              },
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY",
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 5,
              "WriteCapacityUnits": 30,
            },
          },
          {
            "IndexName": "name-index",
            "KeySchema": [
              {
                "AttributeName": "fname",
                "KeyType": "HASH",
              },
            ],
            "Projection": {
              "ProjectionType": "KEYS_ONLY",
            },
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 15,
              "WriteCapacityUnits": 30,
            },
          },
        ],
        "KeySchema": [
          {
            "AttributeName": "aid",
            "KeyType": "HASH",
          },
        ],
        "PointInTimeRecoverySpecification": {
          "PointInTimeRecoveryEnabled": true,
        },
        "ProvisionedThroughput": {
          "ReadCapacityUnits": 25,
          "WriteCapacityUnits": 30,
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES",
        },
        "TableName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-grf-job-status",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "dynamoDataCatalogStatusTableReadScalingTarget544936B3": {
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 25,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "dynamoDataCatalogStatusTableE9ACB88F",
              },
            ],
          ],
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            ],
          ],
        },
        "ScalableDimension": "dynamodb:table:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "dynamoDataCatalogStatusTableReadScalingTargetTrackingEA8022B1": {
      "Properties": {
        "PolicyName": "teststackdynamoDataCatalogStatusTableReadScalingTargetTracking192C2DD9",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "dynamoDataCatalogStatusTableReadScalingTarget544936B3",
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 10,
          "TargetValue": 70,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "dynamoDataCatalogStatusTableWriteScalingTargetD6BBCD46": {
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 30,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "dynamoDataCatalogStatusTableE9ACB88F",
              },
            ],
          ],
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            ],
          ],
        },
        "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "dynamoDataCatalogStatusTableWriteScalingTargetTrackingD2EC7DF0": {
      "Properties": {
        "PolicyName": "teststackdynamoDataCatalogStatusTableWriteScalingTargetTracking5A9B6665",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "dynamoDataCatalogStatusTableWriteScalingTargetD6BBCD46",
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 10,
          "TargetValue": 70,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "dynamoDataCatalogStatusTablemaxfileindexReadScalingTarget4766C10B": {
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 5,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "dynamoDataCatalogStatusTableE9ACB88F",
              },
              "/index/max-file-index",
            ],
          ],
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            ],
          ],
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "dynamoDataCatalogStatusTablemaxfileindexReadScalingTargetTrackingC5BD9481": {
      "Properties": {
        "PolicyName": "teststackdynamoDataCatalogStatusTablemaxfileindexReadScalingTargetTracking699B3E11",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "dynamoDataCatalogStatusTablemaxfileindexReadScalingTarget4766C10B",
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 10,
          "TargetValue": 70,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "dynamoDataCatalogStatusTablemaxfileindexWriteScalingTargetFD4F0C81": {
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 30,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "dynamoDataCatalogStatusTableE9ACB88F",
              },
              "/index/max-file-index",
            ],
          ],
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            ],
          ],
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "dynamoDataCatalogStatusTablemaxfileindexWriteScalingTargetTracking43B81A6C": {
      "Properties": {
        "PolicyName": "teststackdynamoDataCatalogStatusTablemaxfileindexWriteScalingTargetTrackingF1CC354C",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "dynamoDataCatalogStatusTablemaxfileindexWriteScalingTargetFD4F0C81",
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 10,
          "TargetValue": 70,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "dynamoDataCatalogStatusTablenameindexReadScalingTarget756A5D45": {
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 15,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "dynamoDataCatalogStatusTableE9ACB88F",
              },
              "/index/name-index",
            ],
          ],
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            ],
          ],
        },
        "ScalableDimension": "dynamodb:index:ReadCapacityUnits",
        "ServiceNamespace": "dynamodb",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "dynamoDataCatalogStatusTablenameindexReadScalingTargetTracking0A15E69B": {
      "Properties": {
        "PolicyName": "teststackdynamoDataCatalogStatusTablenameindexReadScalingTargetTracking64D84775",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "dynamoDataCatalogStatusTablenameindexReadScalingTarget756A5D45",
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBReadCapacityUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 10,
          "TargetValue": 70,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "dynamoDataCatalogStatusTablenameindexWriteScalingTargetBF74747A": {
      "Properties": {
        "MaxCapacity": 500,
        "MinCapacity": 30,
        "ResourceId": {
          "Fn::Join": [
            "",
            [
              "table/",
              {
                "Ref": "dynamoDataCatalogStatusTableE9ACB88F",
              },
              "/index/name-index",
            ],
          ],
        },
        "RoleARN": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":iam::",
              {
                "Ref": "AWS::AccountId",
              },
              ":role/aws-service-role/dynamodb.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_DynamoDBTable",
            ],
          ],
        },
        "ScalableDimension": "dynamodb:index:WriteCapacityUnits",
        "ServiceNamespace": "dynamodb",
      },
      "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
    },
    "dynamoDataCatalogStatusTablenameindexWriteScalingTargetTrackingBF88D57A": {
      "Properties": {
        "PolicyName": "teststackdynamoDataCatalogStatusTablenameindexWriteScalingTargetTrackingFAAC1A4F",
        "PolicyType": "TargetTrackingScaling",
        "ScalingTargetId": {
          "Ref": "dynamoDataCatalogStatusTablenameindexWriteScalingTargetBF74747A",
        },
        "TargetTrackingScalingPolicyConfiguration": {
          "PredefinedMetricSpecification": {
            "PredefinedMetricType": "DynamoDBWriteCapacityUtilization",
          },
          "ScaleInCooldown": 60,
          "ScaleOutCooldown": 10,
          "TargetValue": 70,
        },
      },
      "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
    },
    "glueDataCatalogAthenaWorkgroup81F608D4": {
      "Properties": {
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-glacier-refreezer-sol",
            ],
          ],
        },
        "RecursiveDeleteOption": true,
        "State": "ENABLED",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "WorkGroupConfiguration": {
          "EnforceWorkGroupConfiguration": true,
          "EngineVersion": {
            "SelectedEngineVersion": "Athena engine version 2",
          },
          "ResultConfiguration": {
            "OutputLocation": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "stagingBucket",
                  },
                  "/results",
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "glueDataCatalogFilelistTable2224351B": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": {
          "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
        },
        "TableInput": {
          "Description": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::GetAtt": [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
                "-grf-filelist generated by CDK",
              ],
            ],
          },
          "Name": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::GetAtt": [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
                "-grf-filelist",
              ],
            ],
          },
          "Parameters": {
            "has_encrypted_data": true,
          },
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "archiveid",
                "Type": "string",
              },
              {
                "Name": "override",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "stagingBucket",
                  },
                  "/filelist/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.serde2.OpenCSVSerde",
            },
            "StoredAsSubDirectories": false,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "glueDataCatalogInventoryDatabase96DE1AD3": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": {
          "Name": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::GetAtt": [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
                "-inventory",
              ],
            ],
          },
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "glueDataCatalogInventoryTable05E5F37F": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": {
          "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
        },
        "TableInput": {
          "Description": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::GetAtt": [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
                "-grf-inventory generated by CDK",
              ],
            ],
          },
          "Name": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::GetAtt": [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
                "-grf-inventory",
              ],
            ],
          },
          "Parameters": {
            "has_encrypted_data": true,
            "skip.header.line.count": "1",
          },
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "archiveid",
                "Type": "string",
              },
              {
                "Name": "archivedescription",
                "Type": "string",
              },
              {
                "Name": "creationdate",
                "Type": "string",
              },
              {
                "Name": "size",
                "Type": "bigint",
              },
              {
                "Name": "sha256treehash",
                "Type": "string",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "stagingBucket",
                  },
                  "/inventory/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "SerdeInfo": {
              "Parameters": {
                "escapeChar": "\\",
                "quoteChar": """,
              },
              "SerializationLibrary": "org.apache.hadoop.hive.serde2.OpenCSVSerde",
            },
            "StoredAsSubDirectories": false,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "glueDataCatalogPartitionedinventoryTable94032B41": {
      "Properties": {
        "CatalogId": {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": {
          "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
        },
        "TableInput": {
          "Description": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::GetAtt": [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
                "-grf-inventory-partitioned generated by CDK",
              ],
            ],
          },
          "Name": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::GetAtt": [
                    "glueDataCatalogtoLowercaseTrigger0ABB3AB5",
                    "stack_name",
                  ],
                },
                "-grf-inventory-partitioned",
              ],
            ],
          },
          "Parameters": {
            "has_encrypted_data": true,
            "parquet.compression": "SNAPPY",
          },
          "PartitionKeys": [
            {
              "Name": "part",
              "Type": "bigint",
            },
          ],
          "StorageDescriptor": {
            "Columns": [
              {
                "Name": "archiveid",
                "Type": "string",
              },
              {
                "Name": "archivedescription",
                "Type": "string",
              },
              {
                "Name": "creationdate",
                "Type": "string",
              },
              {
                "Name": "size",
                "Type": "bigint",
              },
              {
                "Name": "sha256treehash",
                "Type": "string",
              },
              {
                "Name": "row_num",
                "Type": "bigint",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
            "Location": {
              "Fn::Join": [
                "",
                [
                  "s3://",
                  {
                    "Ref": "stagingBucket",
                  },
                  "/partitioned/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
            "SerdeInfo": {
              "SerializationLibrary": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
            },
            "StoredAsSubDirectories": false,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "glueDataCatalogtoLowerCaseRoleDefaultPolicy572EA173": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-toLowercase:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "glueDataCatalogtoLowerCaseRoleDefaultPolicy572EA173",
        "Roles": [
          {
            "Ref": "glueDataCatalogtoLowerCaseRoleFD57E4D5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "glueDataCatalogtoLowerCaseRoleFD57E4D5": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "glueDataCatalogtoLowercase8AA0AFF5": {
      "DependsOn": [
        "glueDataCatalogtoLowerCaseRoleDefaultPolicy572EA173",
        "glueDataCatalogtoLowerCaseRoleFD57E4D5",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "8c1697ba84e64200fef15f7a15ad7c95f751a604d83948003d3641a367fb72a1.zip",
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-toLowercase",
            ],
          ],
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "glueDataCatalogtoLowerCaseRoleFD57E4D5",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "glueDataCatalogtoLowercaseTrigger0ABB3AB5": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "glueDataCatalogtoLowercase8AA0AFF5",
            "Arn",
          ],
        },
        "stack_name": {
          "Ref": "AWS::StackName",
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "inventoryNotification": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W47",
              "reason": "Non sensitive metadata - encryption is not required and cost inefficient",
            },
          ],
        },
      },
      "Properties": {
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::SNS::Topic",
    },
    "monitoringCalculateMetrics1B70CF5B": {
      "DependsOn": [
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "3737ff3ff641f3e92a1d01dc88884c214c3fa388cc739cb79340642b067d48ac.zip",
        },
        "Environment": {
          "Variables": {
            "METRICS_TABLE": {
              "Ref": "dynamoDataCatalogMetricsTable174C007B",
            },
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-calculateMetrics",
            ],
          ],
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "monitoringCalculateMetricsRoleA76278A7",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1": {
      "DependsOn": [
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
      ],
      "Properties": {
        "BatchSize": 1000,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "dynamoDataCatalogStatusTableE9ACB88F",
            "StreamArn",
          ],
        },
        "FunctionName": {
          "Ref": "monitoringCalculateMetrics1B70CF5B",
        },
        "MaximumBatchingWindowInSeconds": 30,
        "ParallelizationFactor": 1,
        "StartingPosition": "TRIM_HORIZON",
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "monitoringCalculateMetricsRoleA76278A7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "monitoringCalculateMetricsRoleDefaultPolicy22C0E657": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "dynamoDataCatalogMetricsTable174C007B",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "Roles": [
          {
            "Ref": "monitoringCalculateMetricsRoleA76278A7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "monitoringCalculateMetricsRolePolicy0C1EF64D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-calculateMetrics:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
            {
              "Action": [
                "dynamodb:ListStreams",
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:ListShards",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "dynamoDataCatalogStatusTableE9ACB88F",
                        "Arn",
                      ],
                    },
                    "/stream/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "Roles": [
          {
            "Ref": "monitoringCalculateMetricsRoleA76278A7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "monitoringPostMetricSchedule8675C968": {
      "Properties": {
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "monitoringPostMetrics98F9F947",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "monitoringPostMetrics98F9F947",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "monitoringPostMetricSchedule8675C968",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "monitoringPostMetrics98F9F947": {
      "DependsOn": [
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "5a2477681cc9ba9f5343efa426460961c4b6e866a4ba0153ff2743e29aef2133.zip",
        },
        "Environment": {
          "Variables": {
            "ARCHIVE_NOTIFICATIONS_TOPIC": {
              "Fn::GetAtt": [
                "archiveNotifications",
                "TopicName",
              ],
            },
            "METRICS_TABLE": {
              "Ref": "dynamoDataCatalogMetricsTable174C007B",
            },
            "STACK_NAME": {
              "Ref": "AWS::StackName",
            },
            "STATUS_TABLE": {
              "Ref": "dynamoDataCatalogStatusTableE9ACB88F",
            },
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-postMetrics",
            ],
          ],
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "monitoringPostMetricsRole87B61E7B",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Lambda::Function",
    },
    "monitoringPostMetricsRole87B61E7B": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "monitoringPostMetricsRolePolicy596F9F4D": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "CloudWatch does not support metric ARNs. Using Namespace condition",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "dynamodb:Query",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "dynamoDataCatalogMetricsTable174C007B",
                  "Arn",
                ],
              },
            },
            {
              "Action": "cloudwatch:PutMetricData",
              "Condition": {
                "StringEquals": {
                  "cloudwatch:namespace": "AmazonS3GlacierReFreezer",
                },
              },
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "permitPostMetrics",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-postMetrics:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "monitoringPostMetricsRolePolicy596F9F4D",
        "Roles": [
          {
            "Ref": "monitoringPostMetricsRole87B61E7B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "monitoringcalculateMetricsLogGroup9961A214": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-calculateMetrics",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringcalculateTreehashLogGroup6FC738B3": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-calculateTreehash",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringcopyChunkLogGroup5D04918E": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-copyChunk",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringcopyToDestinationBucketLogGroup4BB91669": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-copyToDestinationBucket",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringdeployGlueJobScriptLogGroupAA50E4DE": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-deployGlueJobScript",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringdownloadInventoryLogGroup2471C2FF": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-downloadInventory",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringdownloadInventoryPartLogGroupD9E69690": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-downloadInventoryPart",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringgenerateUuidLogGroup18A074CF": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-generateUuid",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringglacierrefreezerdashboardE7F6D8AE": {
      "Properties": {
        "DashboardBody": {
          "Fn::Join": [
            "",
            [
              "{"widgets":[{"type":"metric","width":24,"height":3,"x":0,"y":0,"properties":{"view":"singleValue","title":"Amazon S3 Glacier Re:Freezer Progress Metrics : ",
              {
                "Ref": "AWS::StackName",
              },
              "","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AmazonS3GlacierReFreezer","ArchiveCountTotal","CloudFormationStack","",
              {
                "Ref": "AWS::StackName",
              },
              "",{"label":"Total Archives","accountId":"",
              {
                "Ref": "AWS::AccountId",
              },
              "","stat":"Maximum"}],["AmazonS3GlacierReFreezer","ArchiveCountRequested","CloudFormationStack","",
              {
                "Ref": "AWS::StackName",
              },
              "",{"label":"Requested from Glacier","accountId":"",
              {
                "Ref": "AWS::AccountId",
              },
              "","stat":"Maximum"}],["AmazonS3GlacierReFreezer","ArchiveCountStaged","CloudFormationStack","",
              {
                "Ref": "AWS::StackName",
              },
              "",{"label":"Staged","accountId":"",
              {
                "Ref": "AWS::AccountId",
              },
              "","stat":"Maximum"}],["AmazonS3GlacierReFreezer","ArchiveCountValidated","CloudFormationStack","",
              {
                "Ref": "AWS::StackName",
              },
              "",{"label":"Hashes Validated","accountId":"",
              {
                "Ref": "AWS::AccountId",
              },
              "","stat":"Maximum"}],["AmazonS3GlacierReFreezer","ArchiveCountCompleted","CloudFormationStack","",
              {
                "Ref": "AWS::StackName",
              },
              "",{"label":"Copied to Destination","accountId":"",
              {
                "Ref": "AWS::AccountId",
              },
              "","stat":"Maximum"}]]}},{"type":"metric","width":24,"height":6,"x":0,"y":3,"properties":{"view":"timeSeries","title":"Timeline","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AmazonS3GlacierReFreezer","ArchiveCountTotal","CloudFormationStack","",
              {
                "Ref": "AWS::StackName",
              },
              "",{"label":"Total Archives","accountId":"",
              {
                "Ref": "AWS::AccountId",
              },
              "","stat":"Maximum"}],["AmazonS3GlacierReFreezer","ArchiveCountRequested","CloudFormationStack","",
              {
                "Ref": "AWS::StackName",
              },
              "",{"label":"Requested from Glacier","accountId":"",
              {
                "Ref": "AWS::AccountId",
              },
              "","stat":"Maximum"}],["AmazonS3GlacierReFreezer","ArchiveCountStaged","CloudFormationStack","",
              {
                "Ref": "AWS::StackName",
              },
              "",{"label":"Staged","accountId":"",
              {
                "Ref": "AWS::AccountId",
              },
              "","stat":"Maximum"}],["AmazonS3GlacierReFreezer","ArchiveCountValidated","CloudFormationStack","",
              {
                "Ref": "AWS::StackName",
              },
              "",{"label":"Hashes Validated","accountId":"",
              {
                "Ref": "AWS::AccountId",
              },
              "","stat":"Maximum"}],["AmazonS3GlacierReFreezer","ArchiveCountCompleted","CloudFormationStack","",
              {
                "Ref": "AWS::StackName",
              },
              "",{"label":"Copied to Destination","accountId":"",
              {
                "Ref": "AWS::AccountId",
              },
              "","stat":"Maximum"}]],"yAxis":{}}},{"type":"log","width":24,"height":6,"x":0,"y":9,"properties":{"view":"table","title":"Errors","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","query":"SOURCE '/aws/vendedlogs/states/",
              {
                "Ref": "AWS::StackName",
              },
              "-stageTwoOrchestrator' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-calculateMetrics' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-calculateTreehash' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-copyChunk' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-copyToDestinationBucket' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-deployGlueJobScript' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-downloadInventory' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-downloadInventoryPart' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-generateUuid' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-postMetrics' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-requestArchives' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-requestInventory' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-sendAnonymousStats' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-splitArchive' | SOURCE '/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-toLowercase' | fields @timestamp, @message\\n| filter @message like /error/ or @message like /Error/ or @message like /ERROR/\\n| filter @message not like /ThrottlingException/\\n| filter @message not like /Idle connections will be closed/\\n| sort by @timestamp desc"}},{"type":"metric","width":24,"height":6,"x":0,"y":15,"properties":{"view":"timeSeries","title":"Oldest SQS Message","region":"",
              {
                "Ref": "AWS::Region",
              },
              "","metrics":[["AWS/SQS","ApproximateAgeOfOldestMessage","QueueName","",
              {
                "Ref": "AWS::StackName",
              },
              "-archive-notification-queue"],["AWS/SQS","ApproximateAgeOfOldestMessage","QueueName","",
              {
                "Ref": "AWS::StackName",
              },
              "-chunk-copy-queue"]],"yAxis":{}}}]}",
            ],
          ],
        },
        "DashboardName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-Amazon-S3-Glacier-ReFreezer",
            ],
          ],
        },
      },
      "Type": "AWS::CloudWatch::Dashboard",
    },
    "monitoringpostMetricsLogGroup670566A8": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-postMetrics",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringrequestArchivesLogGroup70D7C9C5": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-requestArchives",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringrequestInventoryLogGroupB7C9607D": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-requestInventory",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringsendAnonymousStatsLogGroup0C9968BB": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-sendAnonymousStats",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringsplitArchiveLogGroup026DE41D": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-splitArchive",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringstageTwoOrchestratorLogGroup62996996": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/vendedlogs/states/",
              {
                "Ref": "AWS::StackName",
              },
              "-stageTwoOrchestrator",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "monitoringtoLowercaseLogGroupC05CBA29": {
      "DeletionPolicy": "Retain",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W84",
              "reason": "The solution is a temporary, one off deployment. No sensitive or PII data logged.",
            },
          ],
        },
      },
      "Properties": {
        "LogGroupName": {
          "Fn::Join": [
            "",
            [
              "/aws/lambda/",
              {
                "Ref": "AWS::StackName",
              },
              "-toLowercase",
            ],
          ],
        },
        "RetentionInDays": 90,
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::Logs::LogGroup",
    },
    "stageFourCalculateTreehashRoleC5DE238E": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageFourCalculateTreehashRoleDefaultPolicy38EF64C8": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W76",
              "reason": "Policy is auto-generated by CDK",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "dynamoDataCatalogStatusTableE9ACB88F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "dynamoDataCatalogStatusTableE9ACB88F",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "dynamoDataCatalogMetricsTable174C007B",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "stageThreearchivenotificationqueue402FED49",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "stageFourdestinationcopyqueue3EEF6C15",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "stageThreetreehashcalcqueue77403987",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageFourCalculateTreehashRoleDefaultPolicy38EF64C8",
        "Roles": [
          {
            "Ref": "stageFourCalculateTreehashRoleC5DE238E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageFourCalculateTreehashRolePolicyC1ADC373": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-calculateTreehash:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
            {
              "Action": "s3:PutObject",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::",
                    {
                      "Ref": "DestinationBucket",
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "allowPutObject",
            },
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::",
                    {
                      "Ref": "DestinationBucket",
                    },
                  ],
                ],
              },
              "Sid": "allowListBucket",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageFourCalculateTreehashRolePolicyC1ADC373",
        "Roles": [
          {
            "Ref": "stageFourCalculateTreehashRoleC5DE238E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageFourcalculateTreehashC1E7BFB4": {
      "DependsOn": [
        "stageFourCalculateTreehashRoleDefaultPolicy38EF64C8",
        "stageFourCalculateTreehashRoleC5DE238E",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "de6f9944faf045fb2e1876fe70a8a0534a72c737fa43fc8dfff4399499119901.zip",
        },
        "Environment": {
          "Variables": {
            "DESTINATION_BUCKET": {
              "Ref": "DestinationBucket",
            },
            "METRIC_TABLE": {
              "Ref": "dynamoDataCatalogMetricsTable174C007B",
            },
            "SQS_ARCHIVE_NOTIFICATION": {
              "Fn::GetAtt": [
                "stageThreearchivenotificationqueue402FED49",
                "QueueName",
              ],
            },
            "SQS_COPY_TO_DESTINATION_NOTIFICATION": {
              "Fn::GetAtt": [
                "stageFourdestinationcopyqueue3EEF6C15",
                "QueueName",
              ],
            },
            "STAGING_BUCKET": {
              "Ref": "stagingBucket",
            },
            "STAGING_BUCKET_PREFIX": "stagingdata",
            "STATUS_TABLE": {
              "Ref": "dynamoDataCatalogStatusTableE9ACB88F",
            },
            "STORAGE_CLASS": {
              "Ref": "DestinationStorageClass",
            },
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-calculateTreehash",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 55,
        "Role": {
          "Fn::GetAtt": [
            "stageFourCalculateTreehashRoleC5DE238E",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageFourcalculateTreehashSqsEventSourceteststackstageThreetreehashcalcqueueE81E0D736E8DC7E1": {
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "stageThreetreehashcalcqueue77403987",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "stageFourcalculateTreehashC1E7BFB4",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "stageFourcopyToDestinationBucket5643054F": {
      "DependsOn": [
        "stageFourcopyToDestinationBucketRoleDefaultPolicyC0C83D3D",
        "stageFourcopyToDestinationBucketRole072254ED",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "d5e1121a408061a0350bf55e9068d67e5a8203ad19ff3bcaff26ed18f1820bde.zip",
        },
        "Environment": {
          "Variables": {
            "DESTINATION_BUCKET": {
              "Ref": "DestinationBucket",
            },
            "STAGING_BUCKET": {
              "Ref": "stagingBucket",
            },
            "STAGING_BUCKET_PREFIX": "stagingdata",
            "STATUS_TABLE": {
              "Ref": "dynamoDataCatalogStatusTableE9ACB88F",
            },
            "STORAGE_CLASS": {
              "Ref": "DestinationStorageClass",
            },
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-copyToDestinationBucket",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "ReservedConcurrentExecutions": 100,
        "Role": {
          "Fn::GetAtt": [
            "stageFourcopyToDestinationBucketRole072254ED",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageFourcopyToDestinationBucketRole072254ED": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageFourcopyToDestinationBucketRoleDefaultPolicyC0C83D3D": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-copyToDestinationBucket:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "dynamoDataCatalogStatusTableE9ACB88F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "dynamoDataCatalogStatusTableE9ACB88F",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DestinationBucket",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DestinationBucket",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "stageFourdestinationcopyqueue3EEF6C15",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageFourcopyToDestinationBucketRoleDefaultPolicyC0C83D3D",
        "Roles": [
          {
            "Ref": "stageFourcopyToDestinationBucketRole072254ED",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageFourcopyToDestinationBucketSqsEventSourceteststackstageFourdestinationcopyqueueA23C134BF9E8EEEC": {
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "stageFourdestinationcopyqueue3EEF6C15",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "stageFourcopyToDestinationBucket5643054F",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "stageFourdestinationcopyqueue3EEF6C15": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W48",
              "reason": "Non sensitive metadata - encryption is not required and cost inefficient",
            },
          ],
        },
      },
      "Properties": {
        "MessageRetentionPeriod": 1209600,
        "QueueName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-destination-copy-queue",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "VisibilityTimeout": 905,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "stageFourdestinationcopyqueuePolicyB1179CE7": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "stageFourdestinationcopyqueue3EEF6C15",
                  "Arn",
                ],
              },
              "Sid": "denyInsecureTransport",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "stageFourdestinationcopyqueue3EEF6C15",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "stageOneInventoryNotificationPolicy66D24C4B": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "sns:GetTopicAttributes",
                "sns:SetTopicAttributes",
                "sns:AddPermission",
                "sns:RemovePermission",
                "sns:DeleteTopic",
                "sns:Subscribe",
                "sns:ListSubscriptionsByTopic",
                "sns:Publish",
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Ref": "inventoryNotification",
              },
              "Sid": "denyInsecureTransport",
            },
            {
              "Action": [
                "sns:GetTopicAttributes",
                "sns:SetTopicAttributes",
                "sns:AddPermission",
                "sns:RemovePermission",
                "sns:DeleteTopic",
                "sns:Subscribe",
                "sns:ListSubscriptionsByTopic",
                "sns:Publish",
                "sns:Receive",
              ],
              "Condition": {
                "StringEquals": {
                  "AWS:SourceOwner": {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "glacier.amazonaws.com",
              },
              "Resource": {
                "Ref": "inventoryNotification",
              },
              "Sid": "permitService",
            },
          ],
          "Version": "2012-10-17",
        },
        "Topics": [
          {
            "Ref": "inventoryNotification",
          },
        ],
      },
      "Type": "AWS::SNS::TopicPolicy",
    },
    "stageOnedownloadInventory7367D822": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
        "stageOnedownloadInventoryRoleDefaultPolicyAD1FA742",
        "stageOnedownloadInventoryRoleAA298206",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "762bbcc1d9187f0e80fc80467ef2af57b279cb322348a2f58c8c98cb1b3f7760.zip",
        },
        "Environment": {
          "Variables": {
            "BUCKET_PREFIX": "inventory",
            "GLACIER_VAULT": {
              "Ref": "SourceVault",
            },
            "INVENTORY_BUCKET": {
              "Ref": "stagingBucket",
            },
            "INVENTORY_PART_FUNCTION": {
              "Ref": "stageOnedownloadInventoryPartC8387F3A",
            },
            "STAGE_TWO_SF_ARN": {
              "Ref": "stageTwoOrchestrator",
            },
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-downloadInventory",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "stageOnedownloadInventoryRoleAA298206",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageOnedownloadInventoryAllowInvoketeststackstageOneInventoryNotification40CE33BD7BDB5327": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "stageOnedownloadInventory7367D822",
            "Arn",
          ],
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "inventoryNotification",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "stageOnedownloadInventoryInventoryNotification72A472C2": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "stageOnedownloadInventory7367D822",
            "Arn",
          ],
        },
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "inventoryNotification",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "stageOnedownloadInventoryPartC8387F3A": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
        "stageOnedownloadInventoryPartRoleDefaultPolicy48449137",
        "stageOnedownloadInventoryPartRole00EF5805",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "4ad7d56939de77ad015f578323a8668cec1ecc55765cff04c301d163cba2f0cb.zip",
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-downloadInventoryPart",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 10,
        "Role": {
          "Fn::GetAtt": [
            "stageOnedownloadInventoryPartRole00EF5805",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageOnedownloadInventoryPartRole00EF5805": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageOnedownloadInventoryPartRoleDefaultPolicy48449137": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-downloadInventoryPart:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "glacier:GetJobOutput",
                "glacier:InitiateJob",
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":glacier:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":vaults/",
                    {
                      "Ref": "SourceVault",
                    },
                  ],
                ],
              },
              "Sid": "allowGlacierAccess",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageOnedownloadInventoryPartRoleDefaultPolicy48449137",
        "Roles": [
          {
            "Ref": "stageOnedownloadInventoryPartRole00EF5805",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageOnedownloadInventoryRoleAA298206": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageOnedownloadInventoryRoleDefaultPolicyAD1FA742": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-downloadInventory:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "glacier:GetJobOutput",
                "glacier:InitiateJob",
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":glacier:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":vaults/",
                    {
                      "Ref": "SourceVault",
                    },
                  ],
                ],
              },
              "Sid": "allowGlacierAccess",
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stageOnedownloadInventoryPartC8387F3A",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stageOnedownloadInventoryPartC8387F3A",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "stageTwoOrchestrator",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageOnedownloadInventoryRoleDefaultPolicyAD1FA742",
        "Roles": [
          {
            "Ref": "stageOnedownloadInventoryRoleAA298206",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageOnerequestInventory8924DF79": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
        "stageOnerequestInventoryRoleDefaultPolicy2769E380",
        "stageOnerequestInventoryRoleC0473E06",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "d8d22e167488925702ba373463c20e3ea3fe0c8cb50ffdfaa907eede260ec203.zip",
        },
        "Environment": {
          "Variables": {
            "CLOUDTRAIL_EXPORT_CONF": {
              "Ref": "CloudTrailExportConfirmation",
            },
            "DESTINATION_BUCKET": {
              "Ref": "DestinationBucket",
            },
            "FILELIST_LOCATION": {
              "Ref": "FilelistS3Location",
            },
            "SNS_TOPIC_ARN": {
              "Ref": "inventoryNotification",
            },
            "SNS_VAULT_CONF": {
              "Ref": "SNSTopicForVaultConfirmation",
            },
            "SOURCE_VAULT": {
              "Ref": "SourceVault",
            },
            "STAGING_BUCKET": {
              "Ref": "stagingBucket",
            },
            "STAGING_LIST_PREFIX": "filelist",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-requestInventory",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "stageOnerequestInventoryRoleC0473E06",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageOnerequestInventoryRoleC0473E06": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageOnerequestInventoryRoleDefaultPolicy2769E380": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-requestInventory:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DestinationBucket",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      {
                        "Ref": "DestinationBucket",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:GetObjectAcl",
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":s3:::",
                    {
                      "Ref": "FilelistS3Location",
                    },
                  ],
                ],
              },
              "Sid": "allowS3Access",
            },
            {
              "Action": [
                "glacier:GetJobOutput",
                "glacier:InitiateJob",
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":glacier:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":vaults/",
                    {
                      "Ref": "SourceVault",
                    },
                  ],
                ],
              },
              "Sid": "allowGlacierAccess",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageOnerequestInventoryRoleDefaultPolicy2769E380",
        "Roles": [
          {
            "Ref": "stageOnerequestInventoryRoleC0473E06",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageOnerequestInventoryTriggerB9B55962": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "stageOnerequestInventory8924DF79",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "stageThreeCopyChunk9DFA72B0": {
      "DependsOn": [
        "stageThreeCopyChunkRoleDefaultPolicyA5C59C91",
        "stageThreeCopyChunkRole24158C8C",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "4d0ca97ee2be345bc1ff747653c03071816ddf0d11510ce52732ebb7ec9a0026.zip",
        },
        "Environment": {
          "Variables": {
            "METRIC_TABLE": {
              "Ref": "dynamoDataCatalogMetricsTable174C007B",
            },
            "SQS_HASH": {
              "Fn::GetAtt": [
                "stageThreetreehashcalcqueue77403987",
                "QueueName",
              ],
            },
            "STAGING_BUCKET": {
              "Ref": "stagingBucket",
            },
            "STAGING_BUCKET_PREFIX": "stagingdata",
            "STATUS_TABLE": {
              "Ref": "dynamoDataCatalogStatusTableE9ACB88F",
            },
            "VAULT": {
              "Ref": "SourceVault",
            },
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-copyChunk",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "ReservedConcurrentExecutions": 35,
        "Role": {
          "Fn::GetAtt": [
            "stageThreeCopyChunkRole24158C8C",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageThreeCopyChunkRole24158C8C": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageThreeCopyChunkRoleDefaultPolicyA5C59C91": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W76",
              "reason": "Policy is auto-generated by CDK",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-copyChunk:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
            {
              "Action": [
                "glacier:GetJobOutput",
                "glacier:InitiateJob",
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":glacier:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":vaults/",
                    {
                      "Ref": "SourceVault",
                    },
                  ],
                ],
              },
              "Sid": "allowGlacierAccess",
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "stageThreechunkcopyqueue6E6E5A95",
                  "Arn",
                ],
              },
              "Sid": "allowSqsSubscribeAccess",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "dynamoDataCatalogStatusTableE9ACB88F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "dynamoDataCatalogStatusTableE9ACB88F",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "dynamoDataCatalogMetricsTable174C007B",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "stageThreetreehashcalcqueue77403987",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageThreeCopyChunkRoleDefaultPolicyA5C59C91",
        "Roles": [
          {
            "Ref": "stageThreeCopyChunkRole24158C8C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageThreeCopyChunkSqsEventSourceteststackstageThreechunkcopyqueue346472D84B59BEB5": {
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "stageThreechunkcopyqueue6E6E5A95",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "stageThreeCopyChunk9DFA72B0",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "stageThreeSplitArchiveCEC9C9A3": {
      "DependsOn": [
        "stageThreesplitArchiveRoleDefaultPolicyCA0A260E",
        "stageThreesplitArchiveRole7D1991B8",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "a761f29d03c161ba514650638bd5b7d278b9e8f037674f67854938bff62fef77.zip",
        },
        "Environment": {
          "Variables": {
            "SQS_CHUNK": {
              "Fn::GetAtt": [
                "stageThreechunkcopyqueue6E6E5A95",
                "QueueName",
              ],
            },
            "SQS_HASH": {
              "Fn::GetAtt": [
                "stageThreetreehashcalcqueue77403987",
                "QueueName",
              ],
            },
            "STAGING_BUCKET": {
              "Ref": "stagingBucket",
            },
            "STAGING_BUCKET_PREFIX": "stagingdata",
            "STATUS_TABLE": {
              "Ref": "dynamoDataCatalogStatusTableE9ACB88F",
            },
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-splitArchive",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "ReservedConcurrentExecutions": 45,
        "Role": {
          "Fn::GetAtt": [
            "stageThreesplitArchiveRole7D1991B8",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageThreeSplitArchiveSqsEventSourceteststackstageThreearchivenotificationqueue7E1D389E608C28A9": {
      "DependsOn": [
        "stageThreesplitArchiveRoleDefaultPolicyCA0A260E",
        "stageThreesplitArchiveRole7D1991B8",
      ],
      "Properties": {
        "BatchSize": 1,
        "EventSourceArn": {
          "Fn::GetAtt": [
            "stageThreearchivenotificationqueue402FED49",
            "Arn",
          ],
        },
        "FunctionName": {
          "Ref": "stageThreeSplitArchiveCEC9C9A3",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "stageThreearchivenotificationqueue402FED49": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W48",
              "reason": "Non sensitive metadata - encryption is not required and cost inefficient",
            },
          ],
        },
      },
      "Properties": {
        "QueueName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-archive-notification-queue",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "VisibilityTimeout": 905,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "stageThreearchivenotificationqueuePolicy277C3061": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "stageThreearchivenotificationqueue402FED49",
                  "Arn",
                ],
              },
              "Sid": "denyInsecureTransport",
            },
            {
              "Action": "sqs:SendMessage",
              "Condition": {
                "ArnEquals": {
                  "aws:SourceArn": {
                    "Ref": "archiveNotifications",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": {
                "Service": "sns.amazonaws.com",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "stageThreearchivenotificationqueue402FED49",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "stageThreearchivenotificationqueue402FED49",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "stageThreearchivenotificationqueueteststackArchiveNotifications7FFBFE83D383EC25": {
      "DependsOn": [
        "stageThreearchivenotificationqueuePolicy277C3061",
      ],
      "Properties": {
        "Endpoint": {
          "Fn::GetAtt": [
            "stageThreearchivenotificationqueue402FED49",
            "Arn",
          ],
        },
        "Protocol": "sqs",
        "TopicArn": {
          "Ref": "archiveNotifications",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "stageThreechunkcopyqueue6E6E5A95": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W48",
              "reason": "Non sensitive metadata - encryption is not required and cost inefficient",
            },
          ],
        },
      },
      "Properties": {
        "QueueName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-chunk-copy-queue",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "VisibilityTimeout": 905,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "stageThreechunkcopyqueuePolicy1B170AFE": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "stageThreechunkcopyqueue6E6E5A95",
                  "Arn",
                ],
              },
              "Sid": "denyInsecureTransport",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "stageThreechunkcopyqueue6E6E5A95",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "stageThreesplitArchiveRole7D1991B8": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageThreesplitArchiveRoleDefaultPolicyCA0A260E": {
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W76",
              "reason": "Policy is auto-generated by CDK",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-splitArchive:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
            {
              "Action": [
                "glacier:GetJobOutput",
                "glacier:InitiateJob",
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":glacier:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":vaults/",
                    {
                      "Ref": "SourceVault",
                    },
                  ],
                ],
              },
              "Sid": "allowGlacierAccess",
            },
            {
              "Action": [
                "sqs:ReceiveMessage",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "stageThreearchivenotificationqueue402FED49",
                  "Arn",
                ],
              },
              "Sid": "allowSqsSubscribeAccess",
            },
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "dynamoDataCatalogStatusTableE9ACB88F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "dynamoDataCatalogStatusTableE9ACB88F",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "stageThreechunkcopyqueue6E6E5A95",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "stageThreetreehashcalcqueue77403987",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageThreesplitArchiveRoleDefaultPolicyCA0A260E",
        "Roles": [
          {
            "Ref": "stageThreesplitArchiveRole7D1991B8",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageThreetreehashcalcqueue77403987": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W48",
              "reason": "Non sensitive metadata - encryption is not required and cost inefficient",
            },
          ],
        },
      },
      "Properties": {
        "MessageRetentionPeriod": 1209600,
        "QueueName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-treehash-calc-queue",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "VisibilityTimeout": 905,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "stageThreetreehashcalcqueuePolicyAC24B291": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sqs:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false,
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": {
                "Fn::GetAtt": [
                  "stageThreetreehashcalcqueue77403987",
                  "Arn",
                ],
              },
              "Sid": "denyInsecureTransport",
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": [
          {
            "Ref": "stageThreetreehashcalcqueue77403987",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "stageTwoDeployGlueJobScriptD9AB96C6": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
        "stageTwodeployGlueJobScriptRoleDefaultPolicyA573D7F7",
        "stageTwodeployGlueJobScriptRole655D516F",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "42d9036fb085c07699265100a8287f00236419d55ab269268ba8892bf736ce1f.zip",
        },
        "Environment": {
          "Variables": {
            "STAGING_BUCKET": {
              "Ref": "stagingBucket",
            },
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-deployGlueJobScript",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "stageTwodeployGlueJobScriptRole655D516F",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageTwoGlueJobRoleDEC61075": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W28",
              "reason": "Transient, one off solution - updates must be through deletion/redeployment of the stack only",
            },
          ],
        },
      },
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "glue.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "RoleName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-glue-job-role",
            ],
          ],
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageTwoGlueJobRoleDefaultPolicy6890375C": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "athena:StartQueryExecution",
                "athena:GetQueryResults",
                "athena:GetWorkGroup",
                "athena:CancelQueryExecution",
                "athena:StopQueryExecution",
                "athena:GetQueryExecution",
                "glue:GetTable",
                "glue:UpdateTable",
                "glue:GetPartitions",
                "glue:BatchCreatePartition",
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":athena:*:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":workgroup/",
                      {
                        "Ref": "AWS::StackName",
                      },
                      "-glacier-refreezer-sol",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/",
                      {
                        "Ref": "glueDataCatalogInventoryTable05E5F37F",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/",
                      {
                        "Ref": "glueDataCatalogFilelistTable2224351B",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/",
                      {
                        "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
                      },
                    ],
                  ],
                },
              ],
              "Sid": "allowStagingAccess",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws-glue/jobs/*:**",
                  ],
                ],
              },
              "Sid": "allowLogging",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageTwoGlueJobRoleDefaultPolicy6890375C",
        "Roles": [
          {
            "Ref": "stageTwoGlueJobRoleDEC61075",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageTwoGlueRepartitionJob3EB94529": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "Command": {
          "Name": "glueetl",
          "ScriptLocation": {
            "Fn::Join": [
              "",
              [
                "s3://",
                {
                  "Ref": "stagingBucket",
                },
                "/glue/partition-inventory.py",
              ],
            ],
          },
        },
        "DefaultArguments": {
          "--DATABASE": {
            "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
          },
          "--DQL": 65970697666560,
          "--FILENAME_TABLE": {
            "Ref": "glueDataCatalogFilelistTable2224351B",
          },
          "--INVENTORY_TABLE": {
            "Ref": "glueDataCatalogInventoryTable05E5F37F",
          },
          "--OUTPUT_TABLE": {
            "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
          },
          "--STAGING_BUCKET": {
            "Ref": "stagingBucket",
          },
          "--enable-continuous-cloudwatch-log": "true",
          "--enable-continuous-log-filter": "false",
          "--job-bookmark-option": "job-bookmark-disable",
        },
        "Description": "To repartition the inventory table",
        "ExecutionProperty": {
          "MaxConcurrentRuns": 1,
        },
        "GlueVersion": "3.0",
        "MaxCapacity": 10,
        "MaxRetries": 0,
        "Name": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-glacier-refreezer",
            ],
          ],
        },
        "Role": {
          "Fn::GetAtt": [
            "stageTwoGlueJobRoleDEC61075",
            "Arn",
          ],
        },
        "Tags": {
          "solution": "amazon-s3-glacier-refreezer",
        },
      },
      "Type": "AWS::Glue::Job",
    },
    "stageTwoOrchestrator": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
        "stageTwoStepfunctionsOrchestratorRoleDefaultPolicy6576A802",
        "stageTwoStepfunctionsOrchestratorRole1165D332",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"Parallel Queries","States":{"Parallel Queries":{"Type":"Parallel","Next":"Check Inventory State","Branches":[{"StartAt":"Start Inventory Query","States":{"Start Inventory Query":{"Next":"Get Inventory Results","Type":"Task","OutputPath":"$.QueryExecution","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::athena:startQueryExecution.sync","Parameters":{"QueryString":"SELECT COUNT(1) AS archiveCount, COALESCE(SUM(size),0) AS vaultSize FROM \\"",
              {
                "Ref": "glueDataCatalogInventoryTable05E5F37F",
              },
              "\\";","QueryExecutionContext":{"Database":"",
              {
                "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
              },
              ""},"ResultConfiguration":{},"WorkGroup":"",
              {
                "Ref": "AWS::StackName",
              },
              "-glacier-refreezer-sol"}},"Get Inventory Results":{"End":true,"Type":"Task","OutputPath":"$.ResultSet.Rows[1]","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::athena:getQueryResults","Parameters":{"QueryExecutionId.$":"$.QueryExecutionId"}}}},{"StartAt":"Start Partitioned Query","States":{"Start Partitioned Query":{"Next":"Get Partitioned Results","Type":"Task","OutputPath":"$.QueryExecution","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::athena:startQueryExecution.sync","Parameters":{"QueryString":"SELECT COUNT(1) AS archiveCount FROM \\"",
              {
                "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
              },
              "\\";","QueryExecutionContext":{"Database":"",
              {
                "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
              },
              ""},"ResultConfiguration":{},"WorkGroup":"",
              {
                "Ref": "AWS::StackName",
              },
              "-glacier-refreezer-sol"}},"Get Partitioned Results":{"End":true,"Type":"Task","OutputPath":"$.ResultSet.Rows[1]","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::athena:getQueryResults","Parameters":{"QueryExecutionId.$":"$.QueryExecutionId"}}}}],"ResultSelector":{"inventoryTable":{"archiveCount.$":"$[0].Data[0].VarCharValue","vaultSize.$":"$[0].Data[1].VarCharValue"},"partitionedTable":{"archiveCount.$":"$[1].Data[0].VarCharValue"}}},"Check Inventory State":{"Type":"Choice","Choices":[{"Variable":"$.inventoryTable.archiveCount","StringEquals":"0","Next":"FAIL: Inventory Empty"},{"And":[{"Not":{"Variable":"$.partitionedTable.archiveCount","StringEquals":"0"}},{"Not":{"Variable":"$.inventoryTable.archiveCount","StringEqualsPath":"$.partitionedTable.archiveCount"}}],"Next":"FAIL: Inventory-Partitioned Mismatch"}],"Default":"Partitioning Required ?"},"Partitioning Required ?":{"Type":"Choice","Choices":[{"Variable":"$.inventoryTable.archiveCount","StringEqualsPath":"$.partitionedTable.archiveCount","Next":"Start Max Partition Query"}],"Default":"Parallel Partitioning and Stats update"},"Parallel Partitioning and Stats update":{"Type":"Parallel","Next":"Start Max Partition Query","Branches":[{"StartAt":"Run Glue Partitioning","States":{"Run Glue Partitioning":{"End":true,"Type":"Task","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::glue:startJobRun.sync","Parameters":{"JobName":"",
              {
                "Ref": "AWS::StackName",
              },
              "-glacier-refreezer","Arguments":{"--ARCHIVE_COUNT.$":"$.inventoryTable.archiveCount","--VAULT_SIZE.$":"$.inventoryTable.vaultSize"}}}}},{"StartAt":"Update Count Metric","States":{"Update Count Metric":{"Next":"Update Size Metric","Type":"Task","ResultPath":"$.putItemResult","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S":"count"},"total":{"N.$":"$.inventoryTable.archiveCount"}},"TableName":"",
              {
                "Ref": "dynamoDataCatalogMetricsTable174C007B",
              },
              ""}},"Update Size Metric":{"Next":"Send Anonymous Statistics","Type":"Task","ResultPath":"$.putItemResult","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::dynamodb:putItem","Parameters":{"Item":{"pk":{"S":"volume"},"total":{"N.$":"$.inventoryTable.vaultSize"}},"TableName":"",
              {
                "Ref": "dynamoDataCatalogMetricsTable174C007B",
              },
              ""}},"Send Anonymous Statistics":{"End":true,"Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2}],"Catch":[{"ErrorEquals":["States.ALL"],"Next":"Ignore SendStats Errors"}],"Type":"Task","InputPath":"$.inventoryTable","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "statisticsSendAnonymousStatsD2E34707",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"Ignore SendStats Errors":{"Type":"Pass","End":true}}}]},"Start Max Partition Query":{"Next":"Get Max Partition Result","Type":"Task","OutputPath":"$.QueryExecution","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::athena:startQueryExecution.sync","Parameters":{"QueryString":"SELECT '{ \\"nextPartition\\": 0, \\"maxPartition\\" :' || CAST(MAX(part) AS VARCHAR) || '}'FROM \\"",
              {
                "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
              },
              "\\";","QueryExecutionContext":{"Database":"",
              {
                "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
              },
              ""},"ResultConfiguration":{},"WorkGroup":"",
              {
                "Ref": "AWS::StackName",
              },
              "-glacier-refreezer-sol"}},"Get Max Partition Result":{"Next":"Request Archives Retrieval","Type":"Task","OutputPath":"$.result","ResultSelector":{"result.$":"States.StringToJson($.ResultSet.Rows[1].Data[0].VarCharValue)"},"Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::athena:getQueryResults","Parameters":{"QueryExecutionId.$":"$.QueryExecutionId"}},"Request Archives Retrieval":{"Next":"Is Complete?","Retry":[{"ErrorEquals":["Lambda.ServiceException","Lambda.AWSLambdaException","Lambda.SdkClientException"],"IntervalSeconds":2,"MaxAttempts":6,"BackoffRate":2},{"ErrorEquals":["States.ALL"],"IntervalSeconds":15,"MaxAttempts":10000,"BackoffRate":1}],"Type":"Task","OutputPath":"$.Payload","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::lambda:invoke","Parameters":{"FunctionName":"",
              {
                "Fn::GetAtt": [
                  "stageTwoRequestArchives06ED0831",
                  "Arn",
                ],
              },
              "","Payload.$":"$"}},"Wait X Seconds":{"Type":"Wait","SecondsPath":"$.timeout","Next":"Request Archives Retrieval"},"Is Complete?":{"Type":"Choice","Choices":[{"Variable":"$.nextPartition","NumericGreaterThanPath":"$.maxPartition","Next":"Success"}],"Default":"Wait X Seconds"},"Success":{"Type":"Succeed"},"FAIL: Inventory Empty":{"Type":"Fail","Error":"Vault Inventory Table is empty. Has it been downloaded?"},"FAIL: Inventory-Partitioned Mismatch":{"Type":"Fail","Error":"Inventory and Partitioned table counts are greater than 0 and do not match. Cannot proceed."}}}",
            ],
          ],
        },
        "LoggingConfiguration": {
          "Destinations": [
            {
              "CloudWatchLogsLogGroup": {
                "LogGroupArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/vendedlogs/states/",
                      {
                        "Ref": "AWS::StackName",
                      },
                      "-stageTwoOrchestrator:*",
                    ],
                  ],
                },
              },
            },
          ],
          "Level": "ALL",
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "stageTwoStepfunctionsOrchestratorRole1165D332",
            "Arn",
          ],
        },
        "StateMachineName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-stageTwoOrchestrator",
            ],
          ],
        },
        "StateMachineType": "STANDARD",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "stageTwoRequestArchiveRole00DF0F46": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageTwoRequestArchiveRoleDefaultPolicy2CD86D07": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W76",
              "reason": "Policy is auto-generated by CDK",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "dynamoDataCatalogStatusTableE9ACB88F",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "dynamoDataCatalogStatusTableE9ACB88F",
                          "Arn",
                        ],
                      },
                      "/index/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "dynamoDataCatalogMetricsTable174C007B",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "athena:StartQueryExecution",
                "athena:GetQueryResults",
                "athena:GetWorkGroup",
                "athena:CancelQueryExecution",
                "athena:StopQueryExecution",
                "athena:GetQueryExecution",
                "glue:GetTable",
                "glue:UpdateTable",
                "glue:GetPartitions",
                "glue:BatchCreatePartition",
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":athena:*:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":workgroup/",
                      {
                        "Ref": "AWS::StackName",
                      },
                      "-glacier-refreezer-sol",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/",
                      {
                        "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
                      },
                    ],
                  ],
                },
              ],
              "Sid": "allowStagingAccess",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-requestArchives:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
            {
              "Action": [
                "glacier:GetJobOutput",
                "glacier:InitiateJob",
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":glacier:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":vaults/",
                    {
                      "Ref": "SourceVault",
                    },
                  ],
                ],
              },
              "Sid": "allowGlacierAccess",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageTwoRequestArchiveRoleDefaultPolicy2CD86D07",
        "Roles": [
          {
            "Ref": "stageTwoRequestArchiveRole00DF0F46",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageTwoRequestArchives06ED0831": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
        "stageTwoRequestArchiveRoleDefaultPolicy2CD86D07",
        "stageTwoRequestArchiveRole00DF0F46",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "2184ba0fb68217fd8f35a68854b2a678f4ad62644217593818672ee9bf09d53f.zip",
        },
        "Environment": {
          "Variables": {
            "ATHENA_WORKGROUP": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName",
                  },
                  "-glacier-refreezer-sol",
                ],
              ],
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATABASE": {
              "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
            },
            "DQL": "65970697666560",
            "METRICS_TABLE": {
              "Ref": "dynamoDataCatalogMetricsTable174C007B",
            },
            "PARTITIONED_INVENTORY_TABLE": {
              "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
            },
            "SNS_TOPIC": {
              "Ref": "archiveNotifications",
            },
            "STAGING_BUCKET": {
              "Ref": "stagingBucket",
            },
            "STATUS_TABLE": {
              "Ref": "dynamoDataCatalogStatusTableE9ACB88F",
            },
            "TIER": {
              "Ref": "GlacierRetrievalTier",
            },
            "VAULT": {
              "Ref": "SourceVault",
            },
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-requestArchives",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 1024,
        "Role": {
          "Fn::GetAtt": [
            "stageTwoRequestArchiveRole00DF0F46",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "stageTwoStepfunctionsOrchestratorRole1165D332": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageTwoStepfunctionsOrchestratorRoleDefaultPolicy6576A802": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W12",
              "reason": "[*] Access granted as per documentation: https://docs.aws.amazon.com/step-functions/latest/dg/cw-logs.html",
            },
            {
              "id": "W76",
              "reason": "SPCM complexity greater then 25 is appropriate for the logic implemented",
            },
          ],
        },
      },
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stageTwoRequestArchives06ED0831",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stageTwoRequestArchives06ED0831",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "statisticsSendAnonymousStatsD2E34707",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "statisticsSendAnonymousStatsD2E34707",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "dynamoDataCatalogMetricsTable174C007B",
                    "Arn",
                  ],
                },
                {
                  "Ref": "AWS::NoValue",
                },
              ],
            },
            {
              "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/vendedlogs/states/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-stageTwoOrchestrator:*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "athena:StartQueryExecution",
                "athena:GetQueryResults",
                "athena:GetWorkGroup",
                "athena:CancelQueryExecution",
                "athena:StopQueryExecution",
                "athena:GetQueryExecution",
                "glue:GetTable",
                "glue:UpdateTable",
                "glue:GetPartitions",
                "glue:BatchCreatePartition",
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": true,
                },
              },
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":athena:*:",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":workgroup/",
                      {
                        "Ref": "AWS::StackName",
                      },
                      "-glacier-refreezer-sol",
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/",
                      {
                        "Ref": "glueDataCatalogInventoryTable05E5F37F",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      {
                        "Ref": "glueDataCatalogInventoryDatabase96DE1AD3",
                      },
                      "/",
                      {
                        "Ref": "glueDataCatalogPartitionedinventoryTable94032B41",
                      },
                    ],
                  ],
                },
              ],
              "Sid": "allowStagingAccess",
            },
            {
              "Action": [
                "glue:StartJobRun",
                "glue:GetJobRun",
                "glue:GetJobRuns",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":glue:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":job/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-glacier-refreezer",
                  ],
                ],
              },
              "Sid": "allowGlueJobRun",
            },
            {
              "Action": [
                "logs:CreateLogDelivery",
                "logs:GetLogDelivery",
                "logs:UpdateLogDelivery",
                "logs:DeleteLogDelivery",
                "logs:ListLogDeliveries",
                "logs:PutResourcePolicy",
                "logs:DescribeResourcePolicies",
                "logs:DescribeLogGroups",
              ],
              "Effect": "Allow",
              "Resource": "*",
              "Sid": "allowLogDelivery",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageTwoStepfunctionsOrchestratorRoleDefaultPolicy6576A802",
        "Roles": [
          {
            "Ref": "stageTwoStepfunctionsOrchestratorRole1165D332",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageTwodeployGlueJobScriptRole655D516F": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "stageTwodeployGlueJobScriptRoleDefaultPolicyA573D7F7": {
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-deployGlueJobScript:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
            {
              "Action": [
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "stageTwodeployGlueJobScriptRoleDefaultPolicyA573D7F7",
        "Roles": [
          {
            "Ref": "stageTwodeployGlueJobScriptRole655D516F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "stageTwodeployGlueJobScriptTriggerBF203D6E": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "monitoringCalculateMetricsDynamoDBEventSourceteststackdynamoDataCatalogStatusTable4AFD52BCA4A6AAB1",
        "monitoringCalculateMetrics1B70CF5B",
        "monitoringcalculateMetricsLogGroup9961A214",
        "monitoringCalculateMetricsRoleDefaultPolicy22C0E657",
        "monitoringCalculateMetricsRoleA76278A7",
        "monitoringCalculateMetricsRolePolicy0C1EF64D",
        "monitoringcalculateTreehashLogGroup6FC738B3",
        "monitoringcopyChunkLogGroup5D04918E",
        "monitoringcopyToDestinationBucketLogGroup4BB91669",
        "monitoringdeployGlueJobScriptLogGroupAA50E4DE",
        "monitoringdownloadInventoryLogGroup2471C2FF",
        "monitoringdownloadInventoryPartLogGroupD9E69690",
        "monitoringgenerateUuidLogGroup18A074CF",
        "monitoringglacierrefreezerdashboardE7F6D8AE",
        "monitoringPostMetrics98F9F947",
        "monitoringPostMetricScheduleAllowEventRuleteststackmonitoringPostMetrics8C0DEF1A842DEFFF",
        "monitoringPostMetricSchedule8675C968",
        "monitoringpostMetricsLogGroup670566A8",
        "monitoringPostMetricsRole87B61E7B",
        "monitoringPostMetricsRolePolicy596F9F4D",
        "monitoringrequestArchivesLogGroup70D7C9C5",
        "monitoringrequestInventoryLogGroupB7C9607D",
        "monitoringsendAnonymousStatsLogGroup0C9968BB",
        "monitoringsplitArchiveLogGroup026DE41D",
        "monitoringstageTwoOrchestratorLogGroup62996996",
        "monitoringtoLowercaseLogGroupC05CBA29",
      ],
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "stageTwoDeployGlueJobScriptD9AB96C6",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "stagingBucket": {
      "DeletionPolicy": "Delete",
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W51",
              "reason": "This bucket does not need a bucket policy",
            },
            {
              "id": "W35",
              "reason": "Temporary storage - access logs are not required. EngSec exemption received.",
            },
          ],
        },
      },
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "stagingBucketStagingBucketPolicyCD743064": {
      "Properties": {
        "Bucket": {
          "Ref": "stagingBucket",
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*",
              },
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "stagingBucket",
                    "Arn",
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "stagingBucket",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "statisticsGenerateUuidF0CAA49C": {
      "DependsOn": [
        "statisticsgenerateUuidRoleDefaultPolicy8C36F40F",
        "statisticsgenerateUuidRole29E0057A",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "c6458abc5dce07dbc5c0590f55c33ba5f4288c8a6bd241ac2ea91ee0cd003c8c.zip",
        },
        "Description": "This function generates UUID for each deployment",
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-generateUuid",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 256,
        "Role": {
          "Fn::GetAtt": [
            "statisticsgenerateUuidRole29E0057A",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "statisticsGenerateUuidTriggerAFF2A046": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "statisticsGenerateUuidF0CAA49C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::CloudFormation::CustomResource",
      "UpdateReplacePolicy": "Delete",
    },
    "statisticsSendAnonymousStatsD2E34707": {
      "DependsOn": [
        "statisticssendAnonymousStatsRoleDefaultPolicyACC07FFB",
        "statisticssendAnonymousStatsRoleDBBBB770",
      ],
      "Metadata": {
        "cfn_nag": {
          "rules_to_suppress": [
            {
              "id": "W58",
              "reason": "cfn nag is unable to reason about CDK generated cloudwatch log permissions",
            },
            {
              "id": "W89",
              "reason": "This is a fully serverless solution - no VPC is required",
            },
            {
              "id": "W92",
              "reason": "Reserved Concurrency is set on high priority functions only by design",
            },
          ],
        },
      },
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "a61ba107a313fa8b3c9b7b3530eb2b8872ce28dfa21f2a53b727a6e195e22306.zip",
        },
        "Description": "This function sends anonymous statistics to the AWS Solutions Builders team",
        "Environment": {
          "Variables": {
            "REGION": {
              "Ref": "AWS::Region",
            },
            "RETRIEVAL_TIER": {
              "Ref": "GlacierRetrievalTier",
            },
            "SEND_ANONYMOUS_STATISTICS": {
              "Fn::FindInMap": [
                "AnonymousStatisticsMap",
                "SendAnonymousStatistics",
                "Data",
              ],
            },
            "SOLUTION_ID": "SO0140",
            "STORAGE_CLASS": {
              "Ref": "DestinationStorageClass",
            },
            "UUID": {
              "Fn::GetAtt": [
                "statisticsGenerateUuidTriggerAFF2A046",
                "UUID",
              ],
            },
            "VERSION": "%%VERSION%%",
          },
        },
        "FunctionName": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::StackName",
              },
              "-sendAnonymousStats",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": {
          "Fn::GetAtt": [
            "statisticssendAnonymousStatsRoleDBBBB770",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "statisticsgenerateUuidRole29E0057A": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "statisticsgenerateUuidRoleDefaultPolicy8C36F40F": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-generateUuid:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "statisticsgenerateUuidRoleDefaultPolicy8C36F40F",
        "Roles": [
          {
            "Ref": "statisticsgenerateUuidRole29E0057A",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "statisticssendAnonymousStatsRoleDBBBB770": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Tags": [
          {
            "Key": "solution",
            "Value": "amazon-s3-glacier-refreezer",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "statisticssendAnonymousStatsRoleDefaultPolicyACC07FFB": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":logs:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":log-group:/aws/lambda/",
                    {
                      "Ref": "AWS::StackName",
                    },
                    "-sendAnonymousStats:**",
                  ],
                ],
              },
              "Sid": "allowCloudWatchLogs",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "statisticssendAnonymousStatsRoleDefaultPolicyACC07FFB",
        "Roles": [
          {
            "Ref": "statisticssendAnonymousStatsRoleDBBBB770",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
