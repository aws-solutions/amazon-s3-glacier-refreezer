"""
Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.
SPDX-License-Identifier: Apache-2.0
"""

import hashlib

ONE_MB = 2**20


class TreeHash:
    def __init__(self, chunk_size: int = ONE_MB) -> None:
        self.hashes: list[bytes] = []
        self.chunk_size = chunk_size

    def update(self, data: bytes) -> None:
        for i in range(0, len(data), self.chunk_size):
            self.hashes.append(hashlib.sha256(data[i : i + self.chunk_size]).digest())

    # Calculates the tree hash for the hashes generated by update()
    # https://docs.aws.amazon.com/amazonglacier/latest/dev/checksum-calculations.html
    def digest(self) -> bytes:
        if len(self.hashes) == 0:
            return b""
        calc_hashes: list[bytes] = self.hashes.copy()
        while len(calc_hashes) > 1:
            next_hashes = []
            while len(calc_hashes) > 1:
                next_hashes.append(
                    hashlib.sha256(calc_hashes.pop(0) + calc_hashes.pop(0)).digest()
                )
            if len(calc_hashes) > 0:
                next_hashes.append(calc_hashes.pop(0))
            calc_hashes = next_hashes
        return calc_hashes[0]
